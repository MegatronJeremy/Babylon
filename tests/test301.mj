// Test301

program test301

namespace Konstante{
	const int nula = 0;
	const int jedan = 1;
	const int pet = 5;
	
	{}
}

namespace Nizovi{
	int niz[];
	char nizch[];
	
	{}
}

	int a;
	
{
	void main()
	    int i;
	    int j;
		int bodovi;
		bool bt;
	{
		bodovi = 0;
		bodovi++;
		bodovi = bodovi + Konstante::jedan;
		bodovi = bodovi * Konstante::pet;
		bodovi--;
		print(bodovi); // 9
		
		Nizovi::niz = new int[3];
		Nizovi::niz[Konstante::nula] = Konstante::jedan; // niz[0] = 1
		Nizovi::niz[1] = 2; // niz[1] = 2
		Nizovi::niz[Nizovi::niz[Konstante::jedan]] = Nizovi::niz[Nizovi::niz[0]] * 3; // niz[2] = 6
		bodovi = Nizovi::niz[2]/Nizovi::niz[0]; // bodovi = 6 / 1 = 6
		print(bodovi); // 6
		print(chr(Nizovi::niz[2])); // 6 as char (ACK)
			
		
		Nizovi::nizch = new char[3];
		Nizovi::nizch[0] = 'a';
		Nizovi::nizch[Konstante::jedan] = 'b';
		Nizovi::nizch[Konstante::pet - 3] = 'c';
		print(ord(Nizovi::nizch[1])); // 'b' as int (98)
		print(Nizovi::nizch[Konstante::jedan * 2]); // 'c'

		print(len(Nizovi::nizch));  // 3
			
		a=1;
		// test complex conditions
		if (a != 1 && Nizovi::nizch[1] == 'b' || Nizovi::nizch[2] != 'c' || Nizovi::nizch[0] == 'a' && a == 1) {
		    print('o');
		    print('k');
		} else {
		    print('n');
		    print('o');
		}

        // test nested for loops
        print(eol);
		for (i = 0; i < 5; i++) {
		    for (j = 0; j < 5; j++) {
		        print(chr(i+j+78));
		    }
		    print(eol);
		}

        // test nested if/else constructs
		if (bt)
		    if (a != 1) print('[');
		    else print('M');
		else
		    print('N');

		if (bt && a != 1) print('a');
		else print('b');

        // test infinite loops (remove i < 0)
		for (; i < 0;) {
		    read(a);
		    if (a == 0) {
		        print('o');
		        print('v');
		        break;
		    } else if (a == 1) {
		        print('n');
		        print('i');
		        continue;
		    }
		    print(chr(a));
		}

		// read(bodovi);
		print(bodovi);
		print(eol);
		bodovi = -bodovi + (Konstante::pet * a / 2 - Konstante::jedan) * bodovi - (3 % 2 + 3 * 2 - 3);
		print(bodovi);
	}
}


