// generated with ast extension for cup
// version 0.8
// 5/10/2023 21:58:9


package ast;

public interface Visitor { 

    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(Designator Designator);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstructorOrMethodDecl ConstructorOrMethodDecl);
    public void visit(VarType VarType);
    public void visit(ConstType ConstType);
    public void visit(MulopModulo MulopModulo);
    public void visit(MulopDivide MulopDivide);
    public void visit(MulopMultiply MulopMultiply);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEqual RelopGreaterEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(DesignatorIndex DesignatorIndex);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewActParsOpt FactorNewActParsOpt);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignatorActParsOpt FactorDesignatorActParsOpt);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(NoMulopFactorList NoMulopFactorList);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(Term Term);
    public void visit(NoAddopTermList NoAddopTermList);
    public void visit(AddopTermList AddopTermList);
    public void visit(ExprNeg ExprNeg);
    public void visit(Expr Expr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFact CondFact);
    public void visit(CondTermFact CondTermFact);
    public void visit(CondTerm CondTerm);
    public void visit(ConditionCondTerm ConditionCondTerm);
    public void visit(Condition Condition);
    public void visit(NoActParsOpt NoActParsOpt);
    public void visit(ActParsOpt ActParsOpt);
    public void visit(ActParsExpr ActParsExpr);
    public void visit(ActPars ActPars);
    public void visit(NoDesignatorList NoDesignatorList);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorListComma DesignatorListComma);
    public void visit(DesignatorAssignSkipFirst DesignatorAssignSkipFirst);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorActParsOpt DesignatorActParsOpt);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(NoConstNumList NoConstNumList);
    public void visit(ConstNumList ConstNumList);
    public void visit(StatementScoped StatementScoped);
    public void visit(StatementForEach StatementForEach);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementWhile StatementWhile);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementList StatementList);
    public void visit(Type Type);
    public void visit(NoFormList NoFormList);
    public void visit(FormList FormList);
    public void visit(FormPars FormPars);
    public void visit(NoFormParsOpt NoFormParsOpt);
    public void visit(FormParsOpt FormParsOpt);
    public void visit(MethodVoid MethodVoid);
    public void visit(MethodType MethodType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodDecl MethodDecl);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(NoConstructorOrMethodDeclList NoConstructorOrMethodDeclList);
    public void visit(ConstructorOrMethodDeclList ConstructorOrMethodDeclList);
    public void visit(NoExtendsClause NoExtendsClause);
    public void visit(ExtendsClause ExtendsClause);
    public void visit(OperationDeclBody OperationDeclBody);
    public void visit(ClassBody ClassBody);
    public void visit(ClassDeclList ClassDeclList);
    public void visit(VarArray VarArray);
    public void visit(VarScalar VarScalar);
    public void visit(NoVarList NoVarList);
    public void visit(VarList VarList);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclList VarDeclList);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNum ConstNum);
    public void visit(NoConstList NoConstList);
    public void visit(ConstList ConstList);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclClass DeclClass);
    public void visit(DeclVar DeclVar);
    public void visit(DeclConst DeclConst);
    public void visit(NoDecl NoDecl);
    public void visit(DeclList DeclList);
    public void visit(Program Program);

}
