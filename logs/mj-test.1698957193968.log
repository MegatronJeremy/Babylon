INFO  21:32:59,986 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:32:59,992 - #1 program
INFO  21:32:59,992 - #16 p
INFO  21:32:59,992 - #5 const
INFO  21:32:59,992 - #16 int
INFO  21:32:59,992 - #16 size
INFO  21:32:59,992 - #33 =
INFO  21:32:59,992 - #17 10
INFO  21:32:59,992 - #36 ;
INFO  21:32:59,992 - #3 class
INFO  21:32:59,992 - #16 Table
INFO  21:32:59,992 - #44 {
INFO  21:32:59,992 - #16 int
INFO  21:32:59,993 - #16 pos
INFO  21:32:59,993 - #42 [
INFO  21:32:59,993 - #43 ]
INFO  21:32:59,993 - #38 ,
INFO  21:32:59,993 - #16 neg
INFO  21:32:59,993 - #42 [
INFO  21:32:59,993 - #43 ]
INFO  21:32:59,993 - #38 ,
INFO  21:32:59,993 - #16 factor
INFO  21:32:59,993 - #36 ;
INFO  21:32:59,993 - #44 {
INFO  21:32:59,993 - #16 Table
INFO  21:32:59,993 - #40 (
INFO  21:32:59,993 - #16 int
INFO  21:32:59,993 - #16 factor
INFO  21:32:59,993 - #41 )
INFO  21:32:59,993 - #44 {
INFO  21:32:59,993 - #16 this
INFO  21:32:59,994 - #39 .
INFO  21:32:59,994 - #16 factor
INFO  21:32:59,994 - #33 =
INFO  21:32:59,994 - #16 factor
INFO  21:32:59,994 - #36 ;
INFO  21:32:59,994 - #45 }
INFO  21:32:59,994 - #12 void
INFO  21:32:59,994 - #16 putp
INFO  21:32:59,994 - #40 (
INFO  21:32:59,994 - #16 int
INFO  21:32:59,994 - #16 a
INFO  21:32:59,994 - #38 ,
INFO  21:32:59,994 - #16 int
INFO  21:32:59,994 - #16 idx
INFO  21:32:59,994 - #41 )
INFO  21:32:59,994 - #44 {
INFO  21:32:59,994 - #16 this
INFO  21:32:59,994 - #39 .
INFO  21:32:59,994 - #16 pos
INFO  21:32:59,994 - #42 [
INFO  21:32:59,997 - #16 idx
INFO  21:32:59,997 - #43 ]
INFO  21:32:59,997 - #33 =
INFO  21:32:59,997 - #16 a
INFO  21:32:59,997 - #36 ;
INFO  21:32:59,997 - #45 }
INFO  21:32:59,997 - #12 void
INFO  21:32:59,997 - #16 putn
INFO  21:32:59,997 - #40 (
INFO  21:32:59,997 - #16 int
INFO  21:32:59,997 - #16 a
INFO  21:32:59,997 - #38 ,
INFO  21:32:59,997 - #16 int
INFO  21:32:59,997 - #16 idx
INFO  21:32:59,997 - #41 )
INFO  21:32:59,997 - #44 {
INFO  21:32:59,997 - #16 this
INFO  21:32:59,997 - #39 .
INFO  21:32:59,997 - #16 neg
INFO  21:32:59,997 - #42 [
INFO  21:32:59,997 - #16 idx
INFO  21:32:59,997 - #43 ]
INFO  21:32:59,997 - #33 =
INFO  21:32:59,997 - #16 a
INFO  21:32:59,997 - #36 ;
INFO  21:32:59,998 - #45 }
INFO  21:32:59,998 - #16 int
INFO  21:32:59,998 - #16 getp
INFO  21:32:59,998 - #40 (
INFO  21:32:59,998 - #16 int
INFO  21:32:59,998 - #16 idx
INFO  21:32:59,998 - #41 )
INFO  21:32:59,998 - #44 {
INFO  21:32:59,998 - #11 return
INFO  21:32:59,998 - #16 pos
INFO  21:32:59,998 - #42 [
INFO  21:32:59,998 - #16 idx
INFO  21:32:59,998 - #43 ]
INFO  21:32:59,998 - #36 ;
INFO  21:32:59,998 - #45 }
INFO  21:32:59,998 - #16 int
INFO  21:32:59,998 - #16 getn
INFO  21:32:59,998 - #40 (
INFO  21:32:59,998 - #16 int
INFO  21:32:59,998 - #16 idx
INFO  21:32:59,998 - #41 )
INFO  21:32:59,998 - #44 {
INFO  21:32:59,998 - #11 return
INFO  21:32:59,998 - #16 neg
INFO  21:32:59,998 - #42 [
INFO  21:32:59,998 - #16 idx
INFO  21:32:59,998 - #43 ]
INFO  21:32:59,998 - #36 ;
INFO  21:32:59,998 - #45 }
INFO  21:32:59,999 - #45 }
INFO  21:32:59,999 - #45 }
INFO  21:32:59,999 - #16 Table
INFO  21:32:59,999 - #16 val
INFO  21:32:59,999 - #36 ;
INFO  21:32:59,999 - #16 Int
INFO  21:32:59,999 - #16 rows
INFO  21:32:59,999 - #38 ,
INFO  21:32:59,999 - #16 columns
INFO  21:32:59,999 - #36 ;
INFO  21:32:59,999 - #44 {
INFO  21:32:59,999 - #12 void
INFO  21:32:59,999 - #16 f
INFO  21:32:59,999 - #40 (
INFO  21:32:59,999 - #16 char
INFO  21:32:59,999 - #16 ch
INFO  21:32:59,999 - #38 ,
INFO  21:32:59,999 - #16 int
INFO  21:32:59,999 - #16 a
INFO  21:32:59,999 - #38 ,
INFO  21:32:59,999 - #16 int
INFO  21:32:59,999 - #16 arg
INFO  21:32:59,999 - #41 )
INFO  21:32:59,999 - #44 {
INFO  21:32:59,999 - #16 int
INFO  21:32:59,999 - #16 x
INFO  21:33:00,000 - #36 ;
INFO  21:33:00,000 - #16 x
INFO  21:33:00,000 - #33 =
INFO  21:33:00,000 - #16 arg
INFO  21:33:00,000 - #36 ;
INFO  21:33:00,000 - #45 }
INFO  21:33:00,000 - #12 void
INFO  21:33:00,000 - #16 main
INFO  21:33:00,000 - #40 (
INFO  21:33:00,000 - #41 )
INFO  21:33:00,000 - #44 {
INFO  21:33:00,000 - #16 int
INFO  21:33:00,000 - #16 x
INFO  21:33:00,000 - #38 ,
INFO  21:33:00,000 - #16 i
INFO  21:33:00,000 - #36 ;
INFO  21:33:00,000 - #16 char
INFO  21:33:00,000 - #16 c
INFO  21:33:00,001 - #36 ;
INFO  21:33:00,001 - #16 int
INFO  21:33:00,001 - #16 arr
INFO  21:33:00,001 - #42 [
INFO  21:33:00,001 - #43 ]
INFO  21:33:00,001 - #36 ;
INFO  21:33:00,001 - #16 val
INFO  21:33:00,001 - #33 =
INFO  21:33:00,001 - #8 new
INFO  21:33:00,001 - #16 Table
INFO  21:33:00,001 - #40 (
INFO  21:33:00,001 - #17 2
INFO  21:33:00,001 - #41 )
INFO  21:33:00,001 - #36 ;
INFO  21:33:00,001 - #16 arr
INFO  21:33:00,001 - #33 =
INFO  21:33:00,001 - #8 new
INFO  21:33:00,001 - #16 int
INFO  21:33:00,001 - #42 [
INFO  21:33:00,001 - #17 3
INFO  21:33:00,001 - #43 ]
INFO  21:33:00,002 - #36 ;
INFO  21:33:00,002 - #16 i
INFO  21:33:00,002 - #33 =
INFO  21:33:00,002 - #17 0
INFO  21:33:00,002 - #36 ;
INFO  21:33:00,002 - #7 while
INFO  21:33:00,002 - #40 (
INFO  21:33:00,002 - #16 i
INFO  21:33:00,002 - #29 <
INFO  21:33:00,002 - #17 3
INFO  21:33:00,002 - #41 )
INFO  21:33:00,002 - #44 {
INFO  21:33:00,002 - #16 arr
INFO  21:33:00,002 - #42 [
INFO  21:33:00,002 - #16 i
INFO  21:33:00,002 - #43 ]
INFO  21:33:00,002 - #33 =
INFO  21:33:00,002 - #16 i
INFO  21:33:00,002 - #36 ;
INFO  21:33:00,002 - #16 i
INFO  21:33:00,002 - #34 ++
INFO  21:33:00,002 - #36 ;
INFO  21:33:00,002 - #45 }
INFO  21:33:00,002 - #16 arr
INFO  21:33:00,002 - #39 .
INFO  21:33:00,002 - #15 foreach
INFO  21:33:00,002 - #40 (
INFO  21:33:00,002 - #16 x
INFO  21:33:00,003 - #46 =>
INFO  21:33:00,003 - #9 print
INFO  21:33:00,003 - #40 (
INFO  21:33:00,003 - #16 x
INFO  21:33:00,003 - #41 )
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,003 - #41 )
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,003 - #16 val
INFO  21:33:00,003 - #39 .
INFO  21:33:00,003 - #16 pos
INFO  21:33:00,003 - #33 =
INFO  21:33:00,003 - #8 new
INFO  21:33:00,003 - #16 int
INFO  21:33:00,003 - #42 [
INFO  21:33:00,003 - #16 size
INFO  21:33:00,003 - #43 ]
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,003 - #16 val
INFO  21:33:00,003 - #39 .
INFO  21:33:00,003 - #16 neg
INFO  21:33:00,003 - #33 =
INFO  21:33:00,003 - #8 new
INFO  21:33:00,003 - #16 int
INFO  21:33:00,003 - #42 [
INFO  21:33:00,003 - #16 size
INFO  21:33:00,003 - #43 ]
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,003 - #10 read
INFO  21:33:00,003 - #40 (
INFO  21:33:00,003 - #16 x
INFO  21:33:00,003 - #41 )
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,003 - #42 [
INFO  21:33:00,003 - #16 i
INFO  21:33:00,003 - #38 ,
INFO  21:33:00,003 - #38 ,
INFO  21:33:00,003 - #16 x
INFO  21:33:00,003 - #43 ]
INFO  21:33:00,003 - #33 =
INFO  21:33:00,003 - #16 arr
INFO  21:33:00,003 - #36 ;
INFO  21:33:00,004 - #7 while
INFO  21:33:00,004 - #40 (
INFO  21:33:00,004 - #16 i
INFO  21:33:00,004 - #29 <
INFO  21:33:00,004 - #16 size
INFO  21:33:00,004 - #41 )
INFO  21:33:00,004 - #44 {
INFO  21:33:00,004 - #16 val
INFO  21:33:00,004 - #39 .
INFO  21:33:00,004 - #16 putp
INFO  21:33:00,004 - #40 (
INFO  21:33:00,004 - #17 0
INFO  21:33:00,004 - #38 ,
INFO  21:33:00,004 - #16 i
INFO  21:33:00,004 - #41 )
INFO  21:33:00,004 - #36 ;
INFO  21:33:00,004 - #16 val
INFO  21:33:00,004 - #39 .
INFO  21:33:00,004 - #16 putn
INFO  21:33:00,004 - #40 (
INFO  21:33:00,004 - #17 0
INFO  21:33:00,004 - #38 ,
INFO  21:33:00,004 - #16 i
INFO  21:33:00,005 - #41 )
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #16 i
INFO  21:33:00,005 - #34 ++
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #45 }
INFO  21:33:00,005 - #16 f
INFO  21:33:00,005 - #40 (
INFO  21:33:00,005 - #16 c
INFO  21:33:00,005 - #38 ,
INFO  21:33:00,005 - #16 x
INFO  21:33:00,005 - #38 ,
INFO  21:33:00,005 - #16 i
INFO  21:33:00,005 - #41 )
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #10 read
INFO  21:33:00,005 - #40 (
INFO  21:33:00,005 - #16 rows
INFO  21:33:00,005 - #41 )
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #16 x
INFO  21:33:00,005 - #33 =
INFO  21:33:00,005 - #16 rows
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #7 while
INFO  21:33:00,005 - #40 (
INFO  21:33:00,005 - #19 true
INFO  21:33:00,005 - #41 )
INFO  21:33:00,005 - #44 {
INFO  21:33:00,005 - #6 if
INFO  21:33:00,005 - #40 (
INFO  21:33:00,005 - #16 x
INFO  21:33:00,005 - #30 <=
INFO  21:33:00,005 - #17 0
INFO  21:33:00,005 - #41 )
INFO  21:33:00,005 - #2 break
INFO  21:33:00,005 - #36 ;
INFO  21:33:00,005 - #6 if
INFO  21:33:00,005 - #40 (
INFO  21:33:00,006 - #17 0
INFO  21:33:00,006 - #30 <=
INFO  21:33:00,006 - #16 x
INFO  21:33:00,006 - #31 &&
INFO  21:33:00,006 - #16 x
INFO  21:33:00,006 - #29 <
INFO  21:33:00,006 - #16 size
INFO  21:33:00,006 - #41 )
INFO  21:33:00,006 - #44 {
INFO  21:33:00,006 - #16 val
INFO  21:33:00,006 - #39 .
INFO  21:33:00,006 - #16 putp
INFO  21:33:00,006 - #40 (
INFO  21:33:00,006 - #16 val
INFO  21:33:00,006 - #39 .
INFO  21:33:00,006 - #16 getp
INFO  21:33:00,006 - #40 (
INFO  21:33:00,006 - #16 x
INFO  21:33:00,006 - #41 )
INFO  21:33:00,006 - #20 +
INFO  21:33:00,006 - #17 1
INFO  21:33:00,006 - #41 )
INFO  21:33:00,006 - #36 ;
INFO  21:33:00,006 - #45 }
INFO  21:33:00,006 - #4 else
INFO  21:33:00,006 - #6 if
INFO  21:33:00,006 - #40 (
INFO  21:33:00,006 - #16 size
INFO  21:33:00,006 - #29 <
INFO  21:33:00,006 - #16 x
INFO  21:33:00,006 - #31 &&
INFO  21:33:00,006 - #16 x
INFO  21:33:00,006 - #29 <
INFO  21:33:00,006 - #17 0
INFO  21:33:00,006 - #41 )
INFO  21:33:00,006 - #44 {
INFO  21:33:00,007 - #16 val
INFO  21:33:00,007 - #39 .
INFO  21:33:00,007 - #16 putn
INFO  21:33:00,007 - #40 (
INFO  21:33:00,007 - #16 val
INFO  21:33:00,007 - #39 .
INFO  21:33:00,007 - #16 getn
INFO  21:33:00,007 - #40 (
INFO  21:33:00,007 - #21 -
INFO  21:33:00,007 - #16 x
INFO  21:33:00,007 - #41 )
INFO  21:33:00,007 - #20 +
INFO  21:33:00,007 - #17 1
INFO  21:33:00,007 - #41 )
INFO  21:33:00,007 - #36 ;
INFO  21:33:00,007 - #45 }
INFO  21:33:00,007 - #10 read
INFO  21:33:00,007 - #40 (
INFO  21:33:00,007 - #16 x
INFO  21:33:00,007 - #41 )
INFO  21:33:00,007 - #36 ;
INFO  21:33:00,007 - #45 }
INFO  21:33:00,007 - #45 }
INFO  21:33:00,007 - #45 }
