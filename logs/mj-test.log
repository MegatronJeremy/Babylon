INFO  17:24:05,744 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  17:24:05,749 - #1 program
INFO  17:24:05,749 - #16 p
INFO  17:24:05,750 - #5 const
INFO  17:24:05,750 - #16 int
INFO  17:24:05,750 - #16 size
INFO  17:24:05,750 - #33 =
INFO  17:24:05,750 - #17 10
INFO  17:24:05,750 - #36 ;
INFO  17:24:05,750 - #3 class
INFO  17:24:05,750 - #16 Table
INFO  17:24:05,750 - #44 {
INFO  17:24:05,750 - #16 int
INFO  17:24:05,750 - #16 pos
INFO  17:24:05,750 - #42 [
INFO  17:24:05,751 - #43 ]
INFO  17:24:05,751 - #38 ,
INFO  17:24:05,751 - #16 neg
INFO  17:24:05,751 - #42 [
INFO  17:24:05,751 - #43 ]
INFO  17:24:05,751 - #38 ,
INFO  17:24:05,751 - #16 factor
INFO  17:24:05,751 - #36 ;
INFO  17:24:05,751 - #44 {
INFO  17:24:05,751 - #16 Table
INFO  17:24:05,751 - #40 (
INFO  17:24:05,751 - #16 int
INFO  17:24:05,751 - #16 factor
INFO  17:24:05,751 - #41 )
INFO  17:24:05,751 - #44 {
INFO  17:24:05,751 - #16 this
INFO  17:24:05,751 - #39 .
INFO  17:24:05,751 - #16 factor
INFO  17:24:05,751 - #33 =
INFO  17:24:05,751 - #16 factor
INFO  17:24:05,751 - #36 ;
INFO  17:24:05,752 - #45 }
INFO  17:24:05,752 - #12 void
INFO  17:24:05,752 - #16 putp
INFO  17:24:05,752 - #40 (
INFO  17:24:05,752 - #16 int
INFO  17:24:05,752 - #16 a
INFO  17:24:05,752 - #38 ,
INFO  17:24:05,752 - #16 int
INFO  17:24:05,752 - #16 idx
INFO  17:24:05,752 - #41 )
INFO  17:24:05,752 - #44 {
INFO  17:24:05,752 - #16 this
INFO  17:24:05,752 - #39 .
INFO  17:24:05,752 - #16 pos
INFO  17:24:05,752 - #42 [
INFO  17:24:05,755 - #16 idx
INFO  17:24:05,755 - #43 ]
INFO  17:24:05,755 - #33 =
INFO  17:24:05,755 - #16 a
INFO  17:24:05,755 - #36 ;
INFO  17:24:05,755 - #45 }
INFO  17:24:05,755 - #12 void
INFO  17:24:05,755 - #16 putn
INFO  17:24:05,755 - #40 (
INFO  17:24:05,755 - #16 int
INFO  17:24:05,755 - #16 a
INFO  17:24:05,755 - #38 ,
INFO  17:24:05,755 - #16 int
INFO  17:24:05,756 - #16 idx
INFO  17:24:05,756 - #41 )
INFO  17:24:05,756 - #44 {
INFO  17:24:05,756 - #16 this
INFO  17:24:05,756 - #39 .
INFO  17:24:05,756 - #16 neg
INFO  17:24:05,756 - #42 [
INFO  17:24:05,756 - #16 idx
INFO  17:24:05,756 - #43 ]
INFO  17:24:05,756 - #33 =
INFO  17:24:05,756 - #16 a
INFO  17:24:05,756 - #36 ;
INFO  17:24:05,756 - #45 }
INFO  17:24:05,756 - #16 int
INFO  17:24:05,756 - #16 getp
INFO  17:24:05,756 - #40 (
INFO  17:24:05,756 - #16 int
INFO  17:24:05,756 - #16 idx
INFO  17:24:05,756 - #41 )
INFO  17:24:05,757 - #44 {
INFO  17:24:05,757 - #11 return
INFO  17:24:05,757 - #16 pos
INFO  17:24:05,757 - #42 [
INFO  17:24:05,757 - #16 idx
INFO  17:24:05,757 - #43 ]
INFO  17:24:05,757 - #36 ;
INFO  17:24:05,757 - #45 }
INFO  17:24:05,757 - #16 int
INFO  17:24:05,757 - #16 getn
INFO  17:24:05,757 - #40 (
INFO  17:24:05,757 - #16 int
INFO  17:24:05,757 - #16 idx
INFO  17:24:05,757 - #41 )
INFO  17:24:05,757 - #44 {
INFO  17:24:05,758 - #11 return
INFO  17:24:05,758 - #16 neg
INFO  17:24:05,758 - #42 [
INFO  17:24:05,758 - #16 idx
INFO  17:24:05,758 - #43 ]
INFO  17:24:05,758 - #36 ;
INFO  17:24:05,758 - #45 }
INFO  17:24:05,758 - #45 }
INFO  17:24:05,758 - #45 }
INFO  17:24:05,759 - #16 Table
INFO  17:24:05,759 - #16 val
INFO  17:24:05,760 - #36 ;
INFO  17:24:05,760 - #16 Int
INFO  17:24:05,760 - #16 rows
INFO  17:24:05,760 - #38 ,
INFO  17:24:05,760 - #16 columns
INFO  17:24:05,760 - #36 ;
INFO  17:24:05,760 - #44 {
INFO  17:24:05,761 - #12 void
INFO  17:24:05,761 - #16 f
INFO  17:24:05,761 - #40 (
INFO  17:24:05,761 - #16 char
INFO  17:24:05,761 - #16 ch
INFO  17:24:05,761 - #38 ,
INFO  17:24:05,761 - #16 int
INFO  17:24:05,761 - #16 a
INFO  17:24:05,761 - #38 ,
INFO  17:24:05,762 - #16 int
INFO  17:24:05,762 - #16 arg
INFO  17:24:05,762 - #41 )
INFO  17:24:05,762 - #44 {
INFO  17:24:05,762 - #16 int
INFO  17:24:05,762 - #16 x
INFO  17:24:05,762 - #36 ;
INFO  17:24:05,762 - #16 x
INFO  17:24:05,762 - #33 =
INFO  17:24:05,762 - #16 arg
INFO  17:24:05,762 - #36 ;
INFO  17:24:05,762 - #45 }
INFO  17:24:05,763 - #12 void
INFO  17:24:05,763 - #16 main
INFO  17:24:05,763 - #40 (
INFO  17:24:05,763 - #41 )
INFO  17:24:05,763 - #44 {
INFO  17:24:05,763 - #16 int
INFO  17:24:05,763 - #16 x
INFO  17:24:05,763 - #38 ,
INFO  17:24:05,763 - #16 i
INFO  17:24:05,763 - #36 ;
INFO  17:24:05,763 - #16 char
INFO  17:24:05,763 - #16 c
INFO  17:24:05,763 - #36 ;
INFO  17:24:05,763 - #16 int
INFO  17:24:05,763 - #16 arr
INFO  17:24:05,763 - #42 [
INFO  17:24:05,763 - #43 ]
INFO  17:24:05,763 - #36 ;
INFO  17:24:05,763 - #16 val
INFO  17:24:05,763 - #33 =
INFO  17:24:05,763 - #8 new
INFO  17:24:05,763 - #16 Table
INFO  17:24:05,763 - #40 (
INFO  17:24:05,763 - #17 2
INFO  17:24:05,763 - #41 )
INFO  17:24:05,764 - #36 ;
INFO  17:24:05,764 - #16 arr
INFO  17:24:05,764 - #33 =
INFO  17:24:05,764 - #8 new
INFO  17:24:05,764 - #16 int
INFO  17:24:05,764 - #42 [
INFO  17:24:05,764 - #17 3
INFO  17:24:05,764 - #43 ]
INFO  17:24:05,764 - #36 ;
INFO  17:24:05,764 - #16 i
INFO  17:24:05,764 - #33 =
INFO  17:24:05,764 - #17 0
INFO  17:24:05,764 - #36 ;
INFO  17:24:05,764 - #7 while
INFO  17:24:05,764 - #40 (
INFO  17:24:05,764 - #16 i
INFO  17:24:05,764 - #29 <
INFO  17:24:05,765 - #17 3
INFO  17:24:05,765 - #41 )
INFO  17:24:05,765 - #44 {
INFO  17:24:05,765 - #16 arr
INFO  17:24:05,765 - #42 [
INFO  17:24:05,765 - #16 i
INFO  17:24:05,765 - #43 ]
INFO  17:24:05,765 - #33 =
INFO  17:24:05,765 - #16 i
INFO  17:24:05,765 - #36 ;
INFO  17:24:05,765 - #16 i
INFO  17:24:05,765 - #34 ++
INFO  17:24:05,765 - #36 ;
INFO  17:24:05,765 - #45 }
INFO  17:24:05,765 - #16 arr
INFO  17:24:05,765 - #39 .
INFO  17:24:05,765 - #15 foreach
INFO  17:24:05,765 - #40 (
INFO  17:24:05,766 - #16 x
INFO  17:24:05,766 - #46 =>
INFO  17:24:05,766 - #9 print
INFO  17:24:05,766 - #40 (
INFO  17:24:05,766 - #16 x
INFO  17:24:05,766 - #41 )
INFO  17:24:05,766 - #36 ;
INFO  17:24:05,766 - #41 )
INFO  17:24:05,766 - #36 ;
INFO  17:24:05,766 - #16 val
INFO  17:24:05,766 - #39 .
INFO  17:24:05,766 - #16 pos
INFO  17:24:05,766 - #33 =
INFO  17:24:05,766 - #8 new
INFO  17:24:05,767 - #16 int
INFO  17:24:05,767 - #42 [
INFO  17:24:05,767 - #16 size
INFO  17:24:05,767 - #43 ]
INFO  17:24:05,767 - #36 ;
INFO  17:24:05,767 - #16 val
INFO  17:24:05,767 - #39 .
INFO  17:24:05,767 - #16 neg
INFO  17:24:05,767 - #33 =
INFO  17:24:05,767 - #8 new
INFO  17:24:05,767 - #16 int
INFO  17:24:05,767 - #42 [
INFO  17:24:05,767 - #16 size
INFO  17:24:05,767 - #43 ]
INFO  17:24:05,767 - #36 ;
INFO  17:24:05,767 - #10 read
INFO  17:24:05,767 - #40 (
INFO  17:24:05,767 - #16 x
INFO  17:24:05,767 - #41 )
INFO  17:24:05,767 - #36 ;
INFO  17:24:05,767 - #42 [
INFO  17:24:05,767 - #16 i
INFO  17:24:05,767 - #38 ,
INFO  17:24:05,767 - #38 ,
INFO  17:24:05,767 - #16 x
INFO  17:24:05,767 - #43 ]
INFO  17:24:05,767 - #33 =
INFO  17:24:05,767 - #16 arr
INFO  17:24:05,767 - #36 ;
INFO  17:24:05,767 - #7 while
INFO  17:24:05,767 - #40 (
INFO  17:24:05,767 - #16 i
INFO  17:24:05,767 - #29 <
INFO  17:24:05,768 - #16 size
INFO  17:24:05,768 - #41 )
INFO  17:24:05,768 - #44 {
INFO  17:24:05,768 - #16 val
INFO  17:24:05,768 - #39 .
INFO  17:24:05,768 - #16 putp
INFO  17:24:05,768 - #40 (
INFO  17:24:05,768 - #17 0
INFO  17:24:05,768 - #38 ,
INFO  17:24:05,768 - #16 i
INFO  17:24:05,768 - #41 )
INFO  17:24:05,768 - #36 ;
INFO  17:24:05,768 - #16 val
INFO  17:24:05,768 - #39 .
INFO  17:24:05,768 - #16 putn
INFO  17:24:05,768 - #40 (
INFO  17:24:05,769 - #17 0
INFO  17:24:05,769 - #38 ,
INFO  17:24:05,769 - #16 i
INFO  17:24:05,769 - #41 )
INFO  17:24:05,769 - #36 ;
INFO  17:24:05,769 - #16 i
INFO  17:24:05,769 - #34 ++
INFO  17:24:05,769 - #36 ;
INFO  17:24:05,769 - #45 }
INFO  17:24:05,769 - #16 f
INFO  17:24:05,769 - #40 (
INFO  17:24:05,769 - #16 c
INFO  17:24:05,769 - #38 ,
INFO  17:24:05,769 - #16 x
INFO  17:24:05,769 - #38 ,
INFO  17:24:05,769 - #16 i
INFO  17:24:05,769 - #41 )
INFO  17:24:05,769 - #36 ;
INFO  17:24:05,769 - #10 read
INFO  17:24:05,769 - #40 (
INFO  17:24:05,769 - #16 rows
INFO  17:24:05,769 - #41 )
INFO  17:24:05,769 - #36 ;
INFO  17:24:05,769 - #16 x
INFO  17:24:05,769 - #33 =
INFO  17:24:05,769 - #16 rows
INFO  17:24:05,769 - #36 ;
INFO  17:24:05,769 - #7 while
INFO  17:24:05,769 - #40 (
INFO  17:24:05,769 - #19 true
INFO  17:24:05,769 - #41 )
INFO  17:24:05,769 - #44 {
INFO  17:24:05,769 - #6 if
INFO  17:24:05,769 - #40 (
INFO  17:24:05,769 - #16 x
INFO  17:24:05,769 - #30 <=
INFO  17:24:05,769 - #17 0
INFO  17:24:05,769 - #41 )
INFO  17:24:05,770 - #2 break
INFO  17:24:05,770 - #36 ;
INFO  17:24:05,770 - #6 if
INFO  17:24:05,770 - #40 (
INFO  17:24:05,770 - #17 0
INFO  17:24:05,770 - #30 <=
INFO  17:24:05,770 - #16 x
INFO  17:24:05,770 - #31 &&
INFO  17:24:05,770 - #16 x
INFO  17:24:05,770 - #29 <
INFO  17:24:05,770 - #16 size
INFO  17:24:05,770 - #41 )
INFO  17:24:05,770 - #44 {
INFO  17:24:05,770 - #16 val
INFO  17:24:05,770 - #39 .
INFO  17:24:05,770 - #16 putp
INFO  17:24:05,770 - #40 (
INFO  17:24:05,770 - #16 val
INFO  17:24:05,770 - #39 .
INFO  17:24:05,770 - #16 getp
INFO  17:24:05,770 - #40 (
INFO  17:24:05,770 - #16 x
INFO  17:24:05,770 - #41 )
INFO  17:24:05,770 - #20 +
INFO  17:24:05,770 - #17 1
INFO  17:24:05,770 - #41 )
INFO  17:24:05,770 - #36 ;
INFO  17:24:05,770 - #45 }
INFO  17:24:05,771 - #4 else
INFO  17:24:05,771 - #6 if
INFO  17:24:05,771 - #40 (
INFO  17:24:05,771 - #21 -
INFO  17:24:05,771 - #16 size
INFO  17:24:05,771 - #29 <
INFO  17:24:05,771 - #16 x
INFO  17:24:05,771 - #31 &&
INFO  17:24:05,771 - #16 x
INFO  17:24:05,771 - #29 <
INFO  17:24:05,771 - #17 0
INFO  17:24:05,771 - #41 )
INFO  17:24:05,771 - #44 {
INFO  17:24:05,771 - #16 val
INFO  17:24:05,771 - #39 .
INFO  17:24:05,771 - #16 putn
INFO  17:24:05,771 - #40 (
INFO  17:24:05,771 - #16 val
INFO  17:24:05,771 - #39 .
INFO  17:24:05,771 - #16 getn
INFO  17:24:05,771 - #40 (
INFO  17:24:05,771 - #21 -
INFO  17:24:05,771 - #16 x
INFO  17:24:05,771 - #41 )
INFO  17:24:05,771 - #20 +
INFO  17:24:05,771 - #17 1
INFO  17:24:05,771 - #41 )
INFO  17:24:05,771 - #36 ;
INFO  17:24:05,771 - #45 }
INFO  17:24:05,771 - #10 read
INFO  17:24:05,771 - #40 (
INFO  17:24:05,771 - #16 x
INFO  17:24:05,771 - #41 )
INFO  17:24:05,771 - #36 ;
INFO  17:24:05,771 - #45 }
INFO  17:24:05,771 - #45 }
INFO  17:24:05,771 - #45 }
