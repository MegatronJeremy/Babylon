INFO  21:30:24,135 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:30:24,150 - #1 program
INFO  21:30:24,150 - #16 p
INFO  21:30:24,150 - #5 const
INFO  21:30:24,150 - #16 int
INFO  21:30:24,150 - #16 size
INFO  21:30:24,150 - #33 =
INFO  21:30:24,150 - #17 10
INFO  21:30:24,150 - #36 ;
INFO  21:30:24,150 - #3 class
INFO  21:30:24,150 - #16 Table
INFO  21:30:24,150 - #44 {
INFO  21:30:24,150 - #16 int
INFO  21:30:24,150 - #16 pos
INFO  21:30:24,151 - #42 [
INFO  21:30:24,151 - #43 ]
INFO  21:30:24,151 - #38 ,
INFO  21:30:24,151 - #16 neg
INFO  21:30:24,151 - #42 [
INFO  21:30:24,151 - #43 ]
INFO  21:30:24,151 - #38 ,
INFO  21:30:24,151 - #16 factor
INFO  21:30:24,151 - #36 ;
INFO  21:30:24,151 - #44 {
INFO  21:30:24,151 - #16 Table
INFO  21:30:24,151 - #40 (
INFO  21:30:24,151 - #16 int
INFO  21:30:24,151 - #16 factor
INFO  21:30:24,151 - #41 )
INFO  21:30:24,151 - #44 {
INFO  21:30:24,151 - #16 this
INFO  21:30:24,151 - #39 .
INFO  21:30:24,151 - #16 factor
INFO  21:30:24,151 - #33 =
INFO  21:30:24,151 - #16 factor
INFO  21:30:24,151 - #36 ;
INFO  21:30:24,152 - #45 }
INFO  21:30:24,152 - #12 void
INFO  21:30:24,152 - #16 putp
INFO  21:30:24,152 - #40 (
INFO  21:30:24,152 - #16 int
INFO  21:30:24,152 - #16 a
INFO  21:30:24,152 - #38 ,
INFO  21:30:24,152 - #16 int
INFO  21:30:24,152 - #16 idx
INFO  21:30:24,152 - #41 )
INFO  21:30:24,152 - #44 {
INFO  21:30:24,152 - #16 this
INFO  21:30:24,152 - #39 .
INFO  21:30:24,152 - #16 pos
INFO  21:30:24,152 - #42 [
INFO  21:30:24,155 - #16 idx
INFO  21:30:24,155 - #43 ]
INFO  21:30:24,155 - #33 =
INFO  21:30:24,155 - #16 a
INFO  21:30:24,155 - #36 ;
INFO  21:30:24,155 - #45 }
INFO  21:30:24,155 - #12 void
INFO  21:30:24,155 - #16 putn
INFO  21:30:24,155 - #40 (
INFO  21:30:24,155 - #16 int
INFO  21:30:24,156 - #16 a
INFO  21:30:24,156 - #38 ,
INFO  21:30:24,156 - #16 int
INFO  21:30:24,156 - #16 idx
INFO  21:30:24,156 - #41 )
INFO  21:30:24,156 - #44 {
INFO  21:30:24,156 - #16 this
INFO  21:30:24,156 - #39 .
INFO  21:30:24,156 - #16 neg
INFO  21:30:24,156 - #42 [
INFO  21:30:24,156 - #16 idx
INFO  21:30:24,156 - #43 ]
INFO  21:30:24,156 - #33 =
INFO  21:30:24,157 - #16 a
INFO  21:30:24,157 - #36 ;
INFO  21:30:24,157 - #45 }
INFO  21:30:24,157 - #16 int
INFO  21:30:24,157 - #16 getp
INFO  21:30:24,157 - #40 (
INFO  21:30:24,157 - #16 int
INFO  21:30:24,157 - #16 idx
INFO  21:30:24,157 - #41 )
INFO  21:30:24,157 - #44 {
INFO  21:30:24,157 - #11 return
INFO  21:30:24,157 - #16 pos
INFO  21:30:24,157 - #42 [
INFO  21:30:24,157 - #16 idx
INFO  21:30:24,157 - #43 ]
INFO  21:30:24,157 - #36 ;
INFO  21:30:24,157 - #45 }
INFO  21:30:24,157 - #16 int
INFO  21:30:24,157 - #16 getn
INFO  21:30:24,157 - #40 (
INFO  21:30:24,157 - #16 int
INFO  21:30:24,157 - #16 idx
INFO  21:30:24,158 - #41 )
INFO  21:30:24,158 - #44 {
INFO  21:30:24,158 - #11 return
INFO  21:30:24,158 - #16 neg
INFO  21:30:24,158 - #42 [
INFO  21:30:24,158 - #16 idx
INFO  21:30:24,158 - #43 ]
INFO  21:30:24,158 - #36 ;
INFO  21:30:24,158 - #45 }
INFO  21:30:24,158 - #45 }
INFO  21:30:24,159 - #45 }
INFO  21:30:24,159 - #16 Table
INFO  21:30:24,159 - #16 val
INFO  21:30:24,159 - #36 ;
INFO  21:30:24,159 - #16 Int
INFO  21:30:24,159 - #16 rows
INFO  21:30:24,159 - #38 ,
INFO  21:30:24,159 - #16 columns
INFO  21:30:24,159 - #36 ;
INFO  21:30:24,159 - #44 {
INFO  21:30:24,159 - #12 void
INFO  21:30:24,159 - #16 f
INFO  21:30:24,160 - #40 (
INFO  21:30:24,160 - #16 char
INFO  21:30:24,160 - #16 ch
INFO  21:30:24,160 - #38 ,
INFO  21:30:24,160 - #16 int
INFO  21:30:24,160 - #16 a
INFO  21:30:24,160 - #38 ,
INFO  21:30:24,160 - #16 int
INFO  21:30:24,160 - #16 arg
INFO  21:30:24,160 - #41 )
INFO  21:30:24,160 - #44 {
INFO  21:30:24,160 - #16 int
INFO  21:30:24,160 - #16 x
INFO  21:30:24,160 - #36 ;
INFO  21:30:24,161 - #16 x
INFO  21:30:24,161 - #33 =
INFO  21:30:24,161 - #16 arg
INFO  21:30:24,161 - #36 ;
INFO  21:30:24,161 - #45 }
INFO  21:30:24,161 - #12 void
INFO  21:30:24,161 - #16 main
INFO  21:30:24,161 - #40 (
INFO  21:30:24,161 - #41 )
INFO  21:30:24,161 - #44 {
INFO  21:30:24,161 - #16 int
INFO  21:30:24,161 - #16 x
INFO  21:30:24,161 - #38 ,
INFO  21:30:24,161 - #16 i
INFO  21:30:24,161 - #36 ;
INFO  21:30:24,161 - #16 char
INFO  21:30:24,161 - #16 c
INFO  21:30:24,161 - #36 ;
INFO  21:30:24,161 - #16 int
INFO  21:30:24,161 - #16 arr
INFO  21:30:24,161 - #42 [
INFO  21:30:24,161 - #43 ]
INFO  21:30:24,161 - #36 ;
INFO  21:30:24,161 - #16 val
INFO  21:30:24,161 - #33 =
INFO  21:30:24,161 - #8 new
INFO  21:30:24,161 - #16 Table
INFO  21:30:24,161 - #40 (
INFO  21:30:24,161 - #17 2
INFO  21:30:24,161 - #41 )
INFO  21:30:24,161 - #36 ;
INFO  21:30:24,161 - #16 arr
INFO  21:30:24,162 - #33 =
INFO  21:30:24,162 - #8 new
INFO  21:30:24,162 - #16 int
INFO  21:30:24,162 - #42 [
INFO  21:30:24,162 - #17 3
INFO  21:30:24,162 - #43 ]
INFO  21:30:24,162 - #36 ;
INFO  21:30:24,162 - #16 i
INFO  21:30:24,162 - #33 =
INFO  21:30:24,162 - #17 0
INFO  21:30:24,162 - #36 ;
INFO  21:30:24,162 - #7 while
INFO  21:30:24,162 - #40 (
INFO  21:30:24,162 - #16 i
INFO  21:30:24,162 - #29 <
INFO  21:30:24,162 - #17 3
INFO  21:30:24,162 - #41 )
INFO  21:30:24,162 - #44 {
INFO  21:30:24,162 - #16 arr
INFO  21:30:24,162 - #42 [
INFO  21:30:24,162 - #16 i
INFO  21:30:24,162 - #43 ]
INFO  21:30:24,162 - #33 =
INFO  21:30:24,162 - #16 i
INFO  21:30:24,162 - #36 ;
INFO  21:30:24,162 - #16 i
INFO  21:30:24,162 - #34 ++
INFO  21:30:24,162 - #36 ;
INFO  21:30:24,163 - #45 }
INFO  21:30:24,163 - #16 arr
INFO  21:30:24,163 - #39 .
INFO  21:30:24,163 - #15 foreach
INFO  21:30:24,163 - #40 (
INFO  21:30:24,163 - #16 x
INFO  21:30:24,163 - #46 =>
INFO  21:30:24,163 - #9 print
INFO  21:30:24,163 - #40 (
INFO  21:30:24,163 - #16 x
INFO  21:30:24,163 - #41 )
INFO  21:30:24,163 - #36 ;
INFO  21:30:24,163 - #41 )
INFO  21:30:24,163 - #36 ;
INFO  21:30:24,163 - #16 val
INFO  21:30:24,163 - #39 .
INFO  21:30:24,163 - #16 pos
INFO  21:30:24,163 - #33 =
INFO  21:30:24,163 - #8 new
INFO  21:30:24,163 - #16 int
INFO  21:30:24,163 - #42 [
INFO  21:30:24,163 - #16 size
INFO  21:30:24,163 - #43 ]
INFO  21:30:24,163 - #36 ;
INFO  21:30:24,163 - #16 val
INFO  21:30:24,163 - #39 .
INFO  21:30:24,163 - #16 neg
INFO  21:30:24,163 - #33 =
INFO  21:30:24,163 - #8 new
INFO  21:30:24,163 - #16 int
INFO  21:30:24,163 - #42 [
INFO  21:30:24,163 - #16 size
INFO  21:30:24,163 - #43 ]
INFO  21:30:24,163 - #36 ;
INFO  21:30:24,163 - #10 read
INFO  21:30:24,163 - #40 (
INFO  21:30:24,163 - #16 x
INFO  21:30:24,163 - #41 )
INFO  21:30:24,163 - #36 ;
INFO  21:30:24,164 - #42 [
INFO  21:30:24,164 - #16 i
INFO  21:30:24,164 - #38 ,
INFO  21:30:24,164 - #38 ,
INFO  21:30:24,164 - #16 x
INFO  21:30:24,164 - #43 ]
INFO  21:30:24,164 - #33 =
INFO  21:30:24,164 - #16 arr
INFO  21:30:24,164 - #36 ;
INFO  21:30:24,164 - #7 while
INFO  21:30:24,164 - #40 (
INFO  21:30:24,164 - #16 i
INFO  21:30:24,164 - #29 <
INFO  21:30:24,164 - #16 size
INFO  21:30:24,164 - #41 )
INFO  21:30:24,164 - #44 {
INFO  21:30:24,164 - #16 val
INFO  21:30:24,164 - #39 .
INFO  21:30:24,164 - #16 putp
INFO  21:30:24,164 - #40 (
INFO  21:30:24,164 - #17 0
INFO  21:30:24,164 - #38 ,
INFO  21:30:24,164 - #16 i
INFO  21:30:24,164 - #41 )
INFO  21:30:24,164 - #36 ;
INFO  21:30:24,164 - #16 val
INFO  21:30:24,164 - #39 .
INFO  21:30:24,164 - #16 putn
INFO  21:30:24,164 - #40 (
INFO  21:30:24,164 - #17 0
INFO  21:30:24,164 - #38 ,
INFO  21:30:24,164 - #16 i
INFO  21:30:24,164 - #41 )
INFO  21:30:24,164 - #36 ;
INFO  21:30:24,164 - #16 i
INFO  21:30:24,165 - #34 ++
INFO  21:30:24,165 - #36 ;
INFO  21:30:24,165 - #45 }
INFO  21:30:24,165 - #16 f
INFO  21:30:24,165 - #40 (
INFO  21:30:24,165 - #16 c
INFO  21:30:24,165 - #38 ,
INFO  21:30:24,165 - #16 x
INFO  21:30:24,165 - #38 ,
INFO  21:30:24,165 - #16 i
INFO  21:30:24,165 - #41 )
INFO  21:30:24,165 - #36 ;
INFO  21:30:24,165 - #10 read
INFO  21:30:24,165 - #40 (
INFO  21:30:24,165 - #16 rows
INFO  21:30:24,165 - #41 )
INFO  21:30:24,165 - #36 ;
INFO  21:30:24,165 - #16 x
INFO  21:30:24,165 - #33 =
INFO  21:30:24,165 - #16 rows
INFO  21:30:24,165 - #36 ;
INFO  21:30:24,165 - #7 while
INFO  21:30:24,165 - #40 (
INFO  21:30:24,165 - #19 true
INFO  21:30:24,165 - #41 )
INFO  21:30:24,165 - #44 {
INFO  21:30:24,165 - #6 if
INFO  21:30:24,165 - #40 (
INFO  21:30:24,165 - #16 x
INFO  21:30:24,165 - #30 <=
INFO  21:30:24,165 - #17 0
INFO  21:30:24,165 - #41 )
INFO  21:30:24,166 - #2 break
INFO  21:30:24,166 - #36 ;
INFO  21:30:24,166 - #6 if
INFO  21:30:24,166 - #40 (
INFO  21:30:24,166 - #17 0
INFO  21:30:24,166 - #30 <=
INFO  21:30:24,166 - #16 x
INFO  21:30:24,166 - #31 &&
INFO  21:30:24,166 - #16 x
INFO  21:30:24,166 - #29 <
INFO  21:30:24,166 - #16 size
INFO  21:30:24,166 - #41 )
INFO  21:30:24,166 - #44 {
INFO  21:30:24,166 - #16 val
INFO  21:30:24,166 - #39 .
INFO  21:30:24,166 - #16 putp
INFO  21:30:24,166 - #40 (
INFO  21:30:24,166 - #16 val
INFO  21:30:24,166 - #39 .
INFO  21:30:24,166 - #16 getp
INFO  21:30:24,166 - #40 (
INFO  21:30:24,166 - #16 x
INFO  21:30:24,166 - #41 )
INFO  21:30:24,166 - #20 +
INFO  21:30:24,166 - #17 1
INFO  21:30:24,166 - #41 )
INFO  21:30:24,166 - #36 ;
INFO  21:30:24,166 - #45 }
INFO  21:30:24,167 - #4 else
INFO  21:30:24,167 - #6 if
INFO  21:30:24,167 - #40 (
INFO  21:30:24,167 - #16 size
INFO  21:30:24,167 - #29 <
INFO  21:30:24,167 - #16 x
INFO  21:30:24,167 - #31 &&
INFO  21:30:24,167 - #16 x
INFO  21:30:24,167 - #29 <
INFO  21:30:24,167 - #17 0
INFO  21:30:24,168 - #41 )
INFO  21:30:24,168 - #44 {
INFO  21:30:24,168 - #16 val
INFO  21:30:24,168 - #39 .
INFO  21:30:24,168 - #16 putn
INFO  21:30:24,168 - #40 (
INFO  21:30:24,168 - #16 val
INFO  21:30:24,168 - #39 .
INFO  21:30:24,168 - #16 getn
INFO  21:30:24,168 - #40 (
INFO  21:30:24,168 - #16 x
INFO  21:30:24,168 - #41 )
INFO  21:30:24,168 - #20 +
INFO  21:30:24,168 - #17 1
INFO  21:30:24,168 - #41 )
INFO  21:30:24,168 - #36 ;
INFO  21:30:24,168 - #45 }
INFO  21:30:24,168 - #10 read
INFO  21:30:24,168 - #40 (
INFO  21:30:24,168 - #16 x
INFO  21:30:24,168 - #41 )
INFO  21:30:24,168 - #36 ;
INFO  21:30:24,168 - #45 }
INFO  21:30:24,168 - #45 }
INFO  21:30:24,168 - #45 }
