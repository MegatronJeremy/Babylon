INFO  21:33:13,973 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:33:13,978 - #1 program
INFO  21:33:13,979 - #16 p
INFO  21:33:13,979 - #5 const
INFO  21:33:13,979 - #16 int
INFO  21:33:13,979 - #16 size
INFO  21:33:13,979 - #33 =
INFO  21:33:13,979 - #17 10
INFO  21:33:13,979 - #36 ;
INFO  21:33:13,979 - #3 class
INFO  21:33:13,979 - #16 Table
INFO  21:33:13,979 - #44 {
INFO  21:33:13,979 - #16 int
INFO  21:33:13,979 - #16 pos
INFO  21:33:13,979 - #42 [
INFO  21:33:13,979 - #43 ]
INFO  21:33:13,979 - #38 ,
INFO  21:33:13,980 - #16 neg
INFO  21:33:13,980 - #42 [
INFO  21:33:13,980 - #43 ]
INFO  21:33:13,980 - #38 ,
INFO  21:33:13,980 - #16 factor
INFO  21:33:13,980 - #36 ;
INFO  21:33:13,980 - #44 {
INFO  21:33:13,980 - #16 Table
INFO  21:33:13,980 - #40 (
INFO  21:33:13,980 - #16 int
INFO  21:33:13,980 - #16 factor
INFO  21:33:13,980 - #41 )
INFO  21:33:13,980 - #44 {
INFO  21:33:13,980 - #16 this
INFO  21:33:13,980 - #39 .
INFO  21:33:13,980 - #16 factor
INFO  21:33:13,980 - #33 =
INFO  21:33:13,980 - #16 factor
INFO  21:33:13,980 - #36 ;
INFO  21:33:13,980 - #45 }
INFO  21:33:13,980 - #12 void
INFO  21:33:13,981 - #16 putp
INFO  21:33:13,981 - #40 (
INFO  21:33:13,981 - #16 int
INFO  21:33:13,981 - #16 a
INFO  21:33:13,981 - #38 ,
INFO  21:33:13,981 - #16 int
INFO  21:33:13,981 - #16 idx
INFO  21:33:13,981 - #41 )
INFO  21:33:13,981 - #44 {
INFO  21:33:13,981 - #16 this
INFO  21:33:13,981 - #39 .
INFO  21:33:13,981 - #16 pos
INFO  21:33:13,981 - #42 [
INFO  21:33:13,983 - #16 idx
INFO  21:33:13,983 - #43 ]
INFO  21:33:13,983 - #33 =
INFO  21:33:13,983 - #16 a
INFO  21:33:13,984 - #36 ;
INFO  21:33:13,984 - #45 }
INFO  21:33:13,984 - #12 void
INFO  21:33:13,984 - #16 putn
INFO  21:33:13,984 - #40 (
INFO  21:33:13,984 - #16 int
INFO  21:33:13,984 - #16 a
INFO  21:33:13,984 - #38 ,
INFO  21:33:13,984 - #16 int
INFO  21:33:13,984 - #16 idx
INFO  21:33:13,984 - #41 )
INFO  21:33:13,984 - #44 {
INFO  21:33:13,984 - #16 this
INFO  21:33:13,984 - #39 .
INFO  21:33:13,984 - #16 neg
INFO  21:33:13,984 - #42 [
INFO  21:33:13,984 - #16 idx
INFO  21:33:13,984 - #43 ]
INFO  21:33:13,984 - #33 =
INFO  21:33:13,984 - #16 a
INFO  21:33:13,984 - #36 ;
INFO  21:33:13,984 - #45 }
INFO  21:33:13,984 - #16 int
INFO  21:33:13,984 - #16 getp
INFO  21:33:13,984 - #40 (
INFO  21:33:13,984 - #16 int
INFO  21:33:13,985 - #16 idx
INFO  21:33:13,985 - #41 )
INFO  21:33:13,985 - #44 {
INFO  21:33:13,985 - #11 return
INFO  21:33:13,985 - #16 pos
INFO  21:33:13,985 - #42 [
INFO  21:33:13,985 - #16 idx
INFO  21:33:13,985 - #43 ]
INFO  21:33:13,985 - #36 ;
INFO  21:33:13,985 - #45 }
INFO  21:33:13,985 - #16 int
INFO  21:33:13,985 - #16 getn
INFO  21:33:13,985 - #40 (
INFO  21:33:13,985 - #16 int
INFO  21:33:13,986 - #16 idx
INFO  21:33:13,986 - #41 )
INFO  21:33:13,986 - #44 {
INFO  21:33:13,986 - #11 return
INFO  21:33:13,986 - #16 neg
INFO  21:33:13,986 - #42 [
INFO  21:33:13,986 - #16 idx
INFO  21:33:13,986 - #43 ]
INFO  21:33:13,986 - #36 ;
INFO  21:33:13,986 - #45 }
INFO  21:33:13,986 - #45 }
INFO  21:33:13,986 - #45 }
INFO  21:33:13,986 - #16 Table
INFO  21:33:13,986 - #16 val
INFO  21:33:13,986 - #36 ;
INFO  21:33:13,987 - #16 Int
INFO  21:33:13,987 - #16 rows
INFO  21:33:13,987 - #38 ,
INFO  21:33:13,987 - #16 columns
INFO  21:33:13,987 - #36 ;
INFO  21:33:13,987 - #44 {
INFO  21:33:13,987 - #12 void
INFO  21:33:13,987 - #16 f
INFO  21:33:13,987 - #40 (
INFO  21:33:13,987 - #16 char
INFO  21:33:13,987 - #16 ch
INFO  21:33:13,987 - #38 ,
INFO  21:33:13,987 - #16 int
INFO  21:33:13,987 - #16 a
INFO  21:33:13,988 - #38 ,
INFO  21:33:13,988 - #16 int
INFO  21:33:13,988 - #16 arg
INFO  21:33:13,988 - #41 )
INFO  21:33:13,989 - #44 {
INFO  21:33:13,989 - #16 int
INFO  21:33:13,989 - #16 x
INFO  21:33:13,989 - #36 ;
INFO  21:33:13,989 - #16 x
INFO  21:33:13,989 - #33 =
INFO  21:33:13,989 - #16 arg
INFO  21:33:13,989 - #36 ;
INFO  21:33:13,989 - #45 }
INFO  21:33:13,989 - #12 void
INFO  21:33:13,989 - #16 main
INFO  21:33:13,989 - #40 (
INFO  21:33:13,989 - #41 )
INFO  21:33:13,989 - #44 {
INFO  21:33:13,989 - #16 int
INFO  21:33:13,990 - #16 x
INFO  21:33:13,990 - #38 ,
INFO  21:33:13,990 - #16 i
INFO  21:33:13,990 - #36 ;
INFO  21:33:13,990 - #16 char
INFO  21:33:13,990 - #16 c
INFO  21:33:13,990 - #36 ;
INFO  21:33:13,990 - #16 int
INFO  21:33:13,990 - #16 arr
INFO  21:33:13,990 - #42 [
INFO  21:33:13,990 - #43 ]
INFO  21:33:13,990 - #36 ;
INFO  21:33:13,990 - #16 val
INFO  21:33:13,990 - #33 =
INFO  21:33:13,990 - #8 new
INFO  21:33:13,990 - #16 Table
INFO  21:33:13,990 - #40 (
INFO  21:33:13,990 - #17 2
INFO  21:33:13,990 - #41 )
INFO  21:33:13,990 - #36 ;
INFO  21:33:13,990 - #16 arr
INFO  21:33:13,990 - #33 =
INFO  21:33:13,990 - #8 new
INFO  21:33:13,991 - #16 int
INFO  21:33:13,991 - #42 [
INFO  21:33:13,991 - #17 3
INFO  21:33:13,991 - #43 ]
INFO  21:33:13,991 - #36 ;
INFO  21:33:13,991 - #16 i
INFO  21:33:13,991 - #33 =
INFO  21:33:13,991 - #17 0
INFO  21:33:13,991 - #36 ;
INFO  21:33:13,991 - #7 while
INFO  21:33:13,991 - #40 (
INFO  21:33:13,991 - #16 i
INFO  21:33:13,991 - #29 <
INFO  21:33:13,991 - #17 3
INFO  21:33:13,991 - #41 )
INFO  21:33:13,991 - #44 {
INFO  21:33:13,991 - #16 arr
INFO  21:33:13,991 - #42 [
INFO  21:33:13,991 - #16 i
INFO  21:33:13,992 - #43 ]
INFO  21:33:13,992 - #33 =
INFO  21:33:13,992 - #16 i
INFO  21:33:13,992 - #36 ;
INFO  21:33:13,992 - #16 i
INFO  21:33:13,992 - #34 ++
INFO  21:33:13,992 - #36 ;
INFO  21:33:13,992 - #45 }
INFO  21:33:13,992 - #16 arr
INFO  21:33:13,992 - #39 .
INFO  21:33:13,992 - #15 foreach
INFO  21:33:13,992 - #40 (
INFO  21:33:13,992 - #16 x
INFO  21:33:13,992 - #46 =>
INFO  21:33:13,992 - #9 print
INFO  21:33:13,992 - #40 (
INFO  21:33:13,993 - #16 x
INFO  21:33:13,993 - #41 )
INFO  21:33:13,993 - #36 ;
INFO  21:33:13,993 - #41 )
INFO  21:33:13,993 - #36 ;
INFO  21:33:13,993 - #16 val
INFO  21:33:13,993 - #39 .
INFO  21:33:13,993 - #16 pos
INFO  21:33:13,993 - #33 =
INFO  21:33:13,993 - #8 new
INFO  21:33:13,993 - #16 int
INFO  21:33:13,993 - #42 [
INFO  21:33:13,993 - #16 size
INFO  21:33:13,993 - #43 ]
INFO  21:33:13,993 - #36 ;
INFO  21:33:13,994 - #16 val
INFO  21:33:13,994 - #39 .
INFO  21:33:13,994 - #16 neg
INFO  21:33:13,994 - #33 =
INFO  21:33:13,994 - #8 new
INFO  21:33:13,994 - #16 int
INFO  21:33:13,994 - #42 [
INFO  21:33:13,994 - #16 size
INFO  21:33:13,994 - #43 ]
INFO  21:33:13,994 - #36 ;
INFO  21:33:13,994 - #10 read
INFO  21:33:13,994 - #40 (
INFO  21:33:13,994 - #16 x
INFO  21:33:13,994 - #41 )
INFO  21:33:13,994 - #36 ;
INFO  21:33:13,994 - #42 [
INFO  21:33:13,994 - #16 i
INFO  21:33:13,994 - #38 ,
INFO  21:33:13,994 - #38 ,
INFO  21:33:13,995 - #16 x
INFO  21:33:13,995 - #43 ]
INFO  21:33:13,995 - #33 =
INFO  21:33:13,995 - #16 arr
INFO  21:33:13,995 - #36 ;
INFO  21:33:13,995 - #7 while
INFO  21:33:13,995 - #40 (
INFO  21:33:13,995 - #16 i
INFO  21:33:13,995 - #29 <
INFO  21:33:13,995 - #16 size
INFO  21:33:13,995 - #41 )
INFO  21:33:13,995 - #44 {
INFO  21:33:13,995 - #16 val
INFO  21:33:13,995 - #39 .
INFO  21:33:13,995 - #16 putp
INFO  21:33:13,995 - #40 (
INFO  21:33:13,995 - #17 0
INFO  21:33:13,995 - #38 ,
INFO  21:33:13,995 - #16 i
INFO  21:33:13,995 - #41 )
INFO  21:33:13,996 - #36 ;
INFO  21:33:13,996 - #16 val
INFO  21:33:13,996 - #39 .
INFO  21:33:13,996 - #16 putn
INFO  21:33:13,996 - #40 (
INFO  21:33:13,996 - #17 0
INFO  21:33:13,996 - #38 ,
INFO  21:33:13,996 - #16 i
INFO  21:33:13,996 - #41 )
INFO  21:33:13,996 - #36 ;
INFO  21:33:13,996 - #16 i
INFO  21:33:13,996 - #34 ++
INFO  21:33:13,997 - #36 ;
INFO  21:33:13,997 - #45 }
INFO  21:33:13,997 - #16 f
INFO  21:33:13,997 - #40 (
INFO  21:33:13,997 - #16 c
INFO  21:33:13,997 - #38 ,
INFO  21:33:13,997 - #16 x
INFO  21:33:13,997 - #38 ,
INFO  21:33:13,997 - #16 i
INFO  21:33:13,997 - #41 )
INFO  21:33:13,997 - #36 ;
INFO  21:33:13,997 - #10 read
INFO  21:33:13,997 - #40 (
INFO  21:33:13,997 - #16 rows
INFO  21:33:13,997 - #41 )
INFO  21:33:13,997 - #36 ;
INFO  21:33:13,997 - #16 x
INFO  21:33:13,998 - #33 =
INFO  21:33:13,998 - #16 rows
INFO  21:33:13,998 - #36 ;
INFO  21:33:13,998 - #7 while
INFO  21:33:13,998 - #40 (
INFO  21:33:13,998 - #19 true
INFO  21:33:13,998 - #41 )
INFO  21:33:13,998 - #44 {
INFO  21:33:13,998 - #6 if
INFO  21:33:13,998 - #40 (
INFO  21:33:13,998 - #16 x
INFO  21:33:13,998 - #30 <=
INFO  21:33:13,998 - #17 0
INFO  21:33:13,998 - #41 )
INFO  21:33:13,998 - #2 break
INFO  21:33:13,998 - #36 ;
INFO  21:33:13,998 - #6 if
INFO  21:33:13,998 - #40 (
INFO  21:33:13,998 - #17 0
INFO  21:33:13,999 - #30 <=
INFO  21:33:13,999 - #16 x
INFO  21:33:13,999 - #31 &&
INFO  21:33:13,999 - #16 x
INFO  21:33:13,999 - #29 <
INFO  21:33:13,999 - #16 size
INFO  21:33:13,999 - #41 )
INFO  21:33:13,999 - #44 {
INFO  21:33:13,999 - #16 val
INFO  21:33:13,999 - #39 .
INFO  21:33:13,999 - #16 putp
INFO  21:33:13,999 - #40 (
INFO  21:33:13,999 - #16 val
INFO  21:33:13,999 - #39 .
INFO  21:33:13,999 - #16 getp
INFO  21:33:13,999 - #40 (
INFO  21:33:13,999 - #16 x
INFO  21:33:14,000 - #41 )
INFO  21:33:14,000 - #20 +
INFO  21:33:14,000 - #17 1
INFO  21:33:14,000 - #41 )
INFO  21:33:14,000 - #36 ;
INFO  21:33:14,000 - #45 }
INFO  21:33:14,000 - #4 else
INFO  21:33:14,000 - #6 if
INFO  21:33:14,000 - #40 (
INFO  21:33:14,000 - #21 -
INFO  21:33:14,000 - #16 size
INFO  21:33:14,000 - #29 <
INFO  21:33:14,000 - #16 x
INFO  21:33:14,000 - #31 &&
INFO  21:33:14,000 - #16 x
INFO  21:33:14,001 - #29 <
INFO  21:33:14,001 - #17 0
INFO  21:33:14,001 - #41 )
INFO  21:33:14,001 - #44 {
INFO  21:33:14,001 - #16 val
INFO  21:33:14,001 - #39 .
INFO  21:33:14,001 - #16 putn
INFO  21:33:14,001 - #40 (
INFO  21:33:14,001 - #16 val
INFO  21:33:14,001 - #39 .
INFO  21:33:14,001 - #16 getn
INFO  21:33:14,001 - #40 (
INFO  21:33:14,001 - #21 -
INFO  21:33:14,001 - #16 x
INFO  21:33:14,001 - #41 )
INFO  21:33:14,001 - #20 +
INFO  21:33:14,001 - #17 1
INFO  21:33:14,001 - #41 )
INFO  21:33:14,001 - #36 ;
INFO  21:33:14,001 - #45 }
INFO  21:33:14,002 - #10 read
INFO  21:33:14,002 - #40 (
INFO  21:33:14,002 - #16 x
INFO  21:33:14,002 - #41 )
INFO  21:33:14,002 - #36 ;
INFO  21:33:14,002 - #45 }
INFO  21:33:14,002 - #45 }
INFO  21:33:14,002 - #45 }
