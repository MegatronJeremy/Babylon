INFO  21:30:58,944 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:30:58,960 - #1 program
INFO  21:30:58,961 - #16 p
INFO  21:30:58,961 - #5 const
INFO  21:30:58,961 - #16 int
INFO  21:30:58,961 - #16 size
INFO  21:30:58,961 - #33 =
INFO  21:30:58,961 - #17 10
INFO  21:30:58,961 - #36 ;
INFO  21:30:58,961 - #3 class
INFO  21:30:58,961 - #16 Table
INFO  21:30:58,961 - #44 {
INFO  21:30:58,961 - #16 int
INFO  21:30:58,961 - #16 pos
INFO  21:30:58,961 - #42 [
INFO  21:30:58,961 - #43 ]
INFO  21:30:58,961 - #38 ,
INFO  21:30:58,961 - #16 neg
INFO  21:30:58,961 - #42 [
INFO  21:30:58,961 - #43 ]
INFO  21:30:58,961 - #38 ,
INFO  21:30:58,962 - #16 factor
INFO  21:30:58,962 - #36 ;
INFO  21:30:58,962 - #44 {
INFO  21:30:58,962 - #16 Table
INFO  21:30:58,962 - #40 (
INFO  21:30:58,962 - #16 int
INFO  21:30:58,962 - #16 factor
INFO  21:30:58,962 - #41 )
INFO  21:30:58,962 - #44 {
INFO  21:30:58,962 - #16 this
INFO  21:30:58,962 - #39 .
INFO  21:30:58,962 - #16 factor
INFO  21:30:58,962 - #33 =
INFO  21:30:58,962 - #16 factor
INFO  21:30:58,962 - #36 ;
INFO  21:30:58,962 - #45 }
INFO  21:30:58,962 - #12 void
INFO  21:30:58,962 - #16 putp
INFO  21:30:58,962 - #40 (
INFO  21:30:58,962 - #16 int
INFO  21:30:58,962 - #16 a
INFO  21:30:58,962 - #38 ,
INFO  21:30:58,962 - #16 int
INFO  21:30:58,962 - #16 idx
INFO  21:30:58,962 - #41 )
INFO  21:30:58,963 - #44 {
INFO  21:30:58,963 - #16 this
INFO  21:30:58,963 - #39 .
INFO  21:30:58,963 - #16 pos
INFO  21:30:58,963 - #42 [
INFO  21:30:58,965 - #16 idx
INFO  21:30:58,965 - #43 ]
INFO  21:30:58,965 - #33 =
INFO  21:30:58,965 - #16 a
INFO  21:30:58,966 - #36 ;
INFO  21:30:58,966 - #45 }
INFO  21:30:58,966 - #12 void
INFO  21:30:58,966 - #16 putn
INFO  21:30:58,966 - #40 (
INFO  21:30:58,966 - #16 int
INFO  21:30:58,966 - #16 a
INFO  21:30:58,966 - #38 ,
INFO  21:30:58,966 - #16 int
INFO  21:30:58,966 - #16 idx
INFO  21:30:58,966 - #41 )
INFO  21:30:58,966 - #44 {
INFO  21:30:58,967 - #16 this
INFO  21:30:58,967 - #39 .
INFO  21:30:58,967 - #16 neg
INFO  21:30:58,967 - #42 [
INFO  21:30:58,967 - #16 idx
INFO  21:30:58,967 - #43 ]
INFO  21:30:58,967 - #33 =
INFO  21:30:58,967 - #16 a
INFO  21:30:58,967 - #36 ;
INFO  21:30:58,967 - #45 }
INFO  21:30:58,967 - #16 int
INFO  21:30:58,967 - #16 getp
INFO  21:30:58,967 - #40 (
INFO  21:30:58,968 - #16 int
INFO  21:30:58,968 - #16 idx
INFO  21:30:58,968 - #41 )
INFO  21:30:58,968 - #44 {
INFO  21:30:58,968 - #11 return
INFO  21:30:58,968 - #16 pos
INFO  21:30:58,968 - #42 [
INFO  21:30:58,968 - #16 idx
INFO  21:30:58,968 - #43 ]
INFO  21:30:58,968 - #36 ;
INFO  21:30:58,968 - #45 }
INFO  21:30:58,968 - #16 int
INFO  21:30:58,968 - #16 getn
INFO  21:30:58,968 - #40 (
INFO  21:30:58,969 - #16 int
INFO  21:30:58,969 - #16 idx
INFO  21:30:58,969 - #41 )
INFO  21:30:58,969 - #44 {
INFO  21:30:58,969 - #11 return
INFO  21:30:58,969 - #16 neg
INFO  21:30:58,969 - #42 [
INFO  21:30:58,969 - #16 idx
INFO  21:30:58,969 - #43 ]
INFO  21:30:58,969 - #36 ;
INFO  21:30:58,969 - #45 }
INFO  21:30:58,969 - #45 }
INFO  21:30:58,969 - #45 }
INFO  21:30:58,969 - #16 Table
INFO  21:30:58,969 - #16 val
INFO  21:30:58,969 - #36 ;
INFO  21:30:58,970 - #16 Int
INFO  21:30:58,970 - #16 rows
INFO  21:30:58,970 - #38 ,
INFO  21:30:58,970 - #16 columns
INFO  21:30:58,970 - #36 ;
INFO  21:30:58,970 - #44 {
INFO  21:30:58,970 - #12 void
INFO  21:30:58,970 - #16 f
INFO  21:30:58,970 - #40 (
INFO  21:30:58,970 - #16 char
INFO  21:30:58,970 - #16 ch
INFO  21:30:58,970 - #38 ,
INFO  21:30:58,971 - #16 int
INFO  21:30:58,971 - #16 a
INFO  21:30:58,971 - #38 ,
INFO  21:30:58,971 - #16 int
INFO  21:30:58,971 - #16 arg
INFO  21:30:58,971 - #41 )
INFO  21:30:58,971 - #44 {
INFO  21:30:58,971 - #16 int
INFO  21:30:58,971 - #16 x
INFO  21:30:58,971 - #36 ;
INFO  21:30:58,971 - #16 x
INFO  21:30:58,971 - #33 =
INFO  21:30:58,971 - #16 arg
INFO  21:30:58,971 - #36 ;
INFO  21:30:58,972 - #45 }
INFO  21:30:58,972 - #12 void
INFO  21:30:58,972 - #16 main
INFO  21:30:58,972 - #40 (
INFO  21:30:58,972 - #41 )
INFO  21:30:58,972 - #44 {
INFO  21:30:58,972 - #16 int
INFO  21:30:58,972 - #16 x
INFO  21:30:58,972 - #38 ,
INFO  21:30:58,972 - #16 i
INFO  21:30:58,972 - #36 ;
INFO  21:30:58,972 - #16 char
INFO  21:30:58,972 - #16 c
INFO  21:30:58,972 - #36 ;
INFO  21:30:58,972 - #16 int
INFO  21:30:58,972 - #16 arr
INFO  21:30:58,972 - #42 [
INFO  21:30:58,972 - #43 ]
INFO  21:30:58,972 - #36 ;
INFO  21:30:58,972 - #16 val
INFO  21:30:58,972 - #33 =
INFO  21:30:58,972 - #8 new
INFO  21:30:58,972 - #16 Table
INFO  21:30:58,972 - #40 (
INFO  21:30:58,972 - #17 2
INFO  21:30:58,972 - #41 )
INFO  21:30:58,972 - #36 ;
INFO  21:30:58,972 - #16 arr
INFO  21:30:58,972 - #33 =
INFO  21:30:58,972 - #8 new
INFO  21:30:58,972 - #16 int
INFO  21:30:58,972 - #42 [
INFO  21:30:58,973 - #17 3
INFO  21:30:58,973 - #43 ]
INFO  21:30:58,973 - #36 ;
INFO  21:30:58,973 - #16 i
INFO  21:30:58,973 - #33 =
INFO  21:30:58,973 - #17 0
INFO  21:30:58,973 - #36 ;
INFO  21:30:58,973 - #7 while
INFO  21:30:58,973 - #40 (
INFO  21:30:58,973 - #16 i
INFO  21:30:58,973 - #29 <
INFO  21:30:58,973 - #17 3
INFO  21:30:58,973 - #41 )
INFO  21:30:58,973 - #44 {
INFO  21:30:58,973 - #16 arr
INFO  21:30:58,973 - #42 [
INFO  21:30:58,973 - #16 i
INFO  21:30:58,973 - #43 ]
INFO  21:30:58,973 - #33 =
INFO  21:30:58,973 - #16 i
INFO  21:30:58,973 - #36 ;
INFO  21:30:58,973 - #16 i
INFO  21:30:58,973 - #34 ++
INFO  21:30:58,973 - #36 ;
INFO  21:30:58,973 - #45 }
INFO  21:30:58,973 - #16 arr
INFO  21:30:58,974 - #39 .
INFO  21:30:58,974 - #15 foreach
INFO  21:30:58,974 - #40 (
INFO  21:30:58,974 - #16 x
INFO  21:30:58,974 - #46 =>
INFO  21:30:58,974 - #9 print
INFO  21:30:58,974 - #40 (
INFO  21:30:58,974 - #16 x
INFO  21:30:58,974 - #41 )
INFO  21:30:58,974 - #36 ;
INFO  21:30:58,974 - #41 )
INFO  21:30:58,974 - #36 ;
INFO  21:30:58,974 - #16 val
INFO  21:30:58,974 - #39 .
INFO  21:30:58,974 - #16 pos
INFO  21:30:58,974 - #33 =
INFO  21:30:58,974 - #8 new
INFO  21:30:58,974 - #16 int
INFO  21:30:58,974 - #42 [
INFO  21:30:58,974 - #16 size
INFO  21:30:58,974 - #43 ]
INFO  21:30:58,974 - #36 ;
INFO  21:30:58,974 - #16 val
INFO  21:30:58,974 - #39 .
INFO  21:30:58,974 - #16 neg
INFO  21:30:58,974 - #33 =
INFO  21:30:58,974 - #8 new
INFO  21:30:58,974 - #16 int
INFO  21:30:58,974 - #42 [
INFO  21:30:58,974 - #16 size
INFO  21:30:58,974 - #43 ]
INFO  21:30:58,974 - #36 ;
INFO  21:30:58,974 - #10 read
INFO  21:30:58,974 - #40 (
INFO  21:30:58,974 - #16 x
INFO  21:30:58,975 - #41 )
INFO  21:30:58,975 - #36 ;
INFO  21:30:58,975 - #42 [
INFO  21:30:58,975 - #16 i
INFO  21:30:58,975 - #38 ,
INFO  21:30:58,975 - #38 ,
INFO  21:30:58,975 - #16 x
INFO  21:30:58,975 - #43 ]
INFO  21:30:58,975 - #33 =
INFO  21:30:58,975 - #16 arr
INFO  21:30:58,975 - #36 ;
INFO  21:30:58,975 - #7 while
INFO  21:30:58,975 - #40 (
INFO  21:30:58,975 - #16 i
INFO  21:30:58,975 - #29 <
INFO  21:30:58,975 - #16 size
INFO  21:30:58,975 - #41 )
INFO  21:30:58,975 - #44 {
INFO  21:30:58,976 - #16 val
INFO  21:30:58,976 - #39 .
INFO  21:30:58,976 - #16 putp
INFO  21:30:58,976 - #40 (
INFO  21:30:58,976 - #17 0
INFO  21:30:58,977 - #38 ,
INFO  21:30:58,977 - #16 i
INFO  21:30:58,977 - #41 )
INFO  21:30:58,977 - #36 ;
INFO  21:30:58,978 - #16 val
INFO  21:30:58,978 - #39 .
INFO  21:30:58,979 - #16 putn
INFO  21:30:58,979 - #40 (
INFO  21:30:58,979 - #17 0
INFO  21:30:58,979 - #38 ,
INFO  21:30:58,979 - #16 i
INFO  21:30:58,979 - #41 )
INFO  21:30:58,979 - #36 ;
INFO  21:30:58,979 - #16 i
INFO  21:30:58,979 - #34 ++
INFO  21:30:58,979 - #36 ;
INFO  21:30:58,979 - #45 }
INFO  21:30:58,979 - #16 f
INFO  21:30:58,979 - #40 (
INFO  21:30:58,979 - #16 c
INFO  21:30:58,979 - #38 ,
INFO  21:30:58,979 - #16 x
INFO  21:30:58,979 - #38 ,
INFO  21:30:58,980 - #16 i
INFO  21:30:58,980 - #41 )
INFO  21:30:58,980 - #36 ;
INFO  21:30:58,980 - #10 read
INFO  21:30:58,980 - #40 (
INFO  21:30:58,980 - #16 rows
INFO  21:30:58,980 - #41 )
INFO  21:30:58,980 - #36 ;
INFO  21:30:58,980 - #16 x
INFO  21:30:58,980 - #33 =
INFO  21:30:58,980 - #16 rows
INFO  21:30:58,980 - #36 ;
INFO  21:30:58,980 - #7 while
INFO  21:30:58,980 - #40 (
INFO  21:30:58,980 - #19 true
INFO  21:30:58,980 - #41 )
INFO  21:30:58,980 - #44 {
INFO  21:30:58,980 - #6 if
INFO  21:30:58,980 - #40 (
INFO  21:30:58,980 - #16 x
INFO  21:30:58,980 - #30 <=
INFO  21:30:58,980 - #17 0
INFO  21:30:58,980 - #41 )
INFO  21:30:58,980 - #2 break
INFO  21:30:58,980 - #36 ;
INFO  21:30:58,980 - #6 if
INFO  21:30:58,980 - #40 (
INFO  21:30:58,980 - #17 0
INFO  21:30:58,980 - #30 <=
INFO  21:30:58,980 - #16 x
INFO  21:30:58,981 - #31 &&
INFO  21:30:58,981 - #16 x
INFO  21:30:58,981 - #29 <
INFO  21:30:58,981 - #16 size
INFO  21:30:58,981 - #41 )
INFO  21:30:58,981 - #44 {
INFO  21:30:58,981 - #16 val
INFO  21:30:58,981 - #39 .
INFO  21:30:58,981 - #16 putp
INFO  21:30:58,981 - #40 (
INFO  21:30:58,981 - #16 val
INFO  21:30:58,981 - #39 .
INFO  21:30:58,981 - #16 getp
INFO  21:30:58,981 - #40 (
INFO  21:30:58,981 - #16 x
INFO  21:30:58,981 - #41 )
INFO  21:30:58,981 - #20 +
INFO  21:30:58,981 - #17 1
INFO  21:30:58,981 - #41 )
INFO  21:30:58,981 - #36 ;
INFO  21:30:58,981 - #45 }
INFO  21:30:58,981 - #4 else
INFO  21:30:58,981 - #6 if
INFO  21:30:58,981 - #40 (
INFO  21:30:58,981 - #16 size
INFO  21:30:58,981 - #29 <
INFO  21:30:58,981 - #16 x
INFO  21:30:58,981 - #31 &&
INFO  21:30:58,982 - #16 x
INFO  21:30:58,982 - #29 <
INFO  21:30:58,982 - #17 0
INFO  21:30:58,982 - #41 )
INFO  21:30:58,982 - #44 {
INFO  21:30:58,982 - #16 val
INFO  21:30:58,982 - #39 .
INFO  21:30:58,982 - #16 putn
INFO  21:30:58,982 - #40 (
INFO  21:30:58,982 - #16 val
INFO  21:30:58,982 - #39 .
INFO  21:30:58,982 - #16 getn
INFO  21:30:58,982 - #40 (
INFO  21:30:58,982 - #16 x
INFO  21:30:58,982 - #41 )
INFO  21:30:58,982 - #20 +
INFO  21:30:58,982 - #17 1
INFO  21:30:58,982 - #41 )
INFO  21:30:58,982 - #36 ;
INFO  21:30:58,982 - #45 }
INFO  21:30:58,982 - #10 read
INFO  21:30:58,982 - #40 (
INFO  21:30:58,982 - #16 x
INFO  21:30:58,982 - #41 )
INFO  21:30:58,982 - #36 ;
INFO  21:30:58,982 - #45 }
INFO  21:30:58,982 - #45 }
INFO  21:30:58,982 - #45 }
