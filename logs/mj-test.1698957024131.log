INFO  21:29:33,851 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:29:33,856 - #1 program
INFO  21:29:33,856 - #16 p
INFO  21:29:33,856 - #5 const
INFO  21:29:33,856 - #16 int
INFO  21:29:33,856 - #16 size
INFO  21:29:33,857 - #33 =
INFO  21:29:33,857 - #17 10
INFO  21:29:33,857 - #36 ;
INFO  21:29:33,857 - #3 class
INFO  21:29:33,857 - #16 Table
INFO  21:29:33,857 - #44 {
INFO  21:29:33,857 - #16 int
INFO  21:29:33,857 - #16 pos
INFO  21:29:33,857 - #42 [
INFO  21:29:33,857 - #43 ]
INFO  21:29:33,857 - #38 ,
INFO  21:29:33,857 - #16 neg
INFO  21:29:33,857 - #42 [
INFO  21:29:33,857 - #43 ]
INFO  21:29:33,857 - #38 ,
INFO  21:29:33,857 - #16 factor
INFO  21:29:33,857 - #36 ;
INFO  21:29:33,857 - #44 {
INFO  21:29:33,858 - #16 Table
INFO  21:29:33,858 - #40 (
INFO  21:29:33,858 - #16 int
INFO  21:29:33,858 - #16 factor
INFO  21:29:33,858 - #41 )
INFO  21:29:33,858 - #44 {
INFO  21:29:33,858 - #16 this
INFO  21:29:33,858 - #39 .
INFO  21:29:33,858 - #16 factor
INFO  21:29:33,858 - #33 =
INFO  21:29:33,858 - #16 factor
INFO  21:29:33,858 - #36 ;
INFO  21:29:33,858 - #45 }
INFO  21:29:33,858 - #12 void
INFO  21:29:33,858 - #16 putp
INFO  21:29:33,858 - #40 (
INFO  21:29:33,858 - #16 int
INFO  21:29:33,858 - #16 a
INFO  21:29:33,858 - #38 ,
INFO  21:29:33,858 - #16 int
INFO  21:29:33,858 - #16 idx
INFO  21:29:33,858 - #41 )
INFO  21:29:33,858 - #44 {
INFO  21:29:33,858 - #16 this
INFO  21:29:33,859 - #39 .
INFO  21:29:33,859 - #16 pos
INFO  21:29:33,859 - #42 [
INFO  21:29:33,861 - #16 idx
INFO  21:29:33,861 - #43 ]
INFO  21:29:33,861 - #33 =
INFO  21:29:33,861 - #16 a
INFO  21:29:33,861 - #36 ;
INFO  21:29:33,861 - #45 }
INFO  21:29:33,861 - #12 void
INFO  21:29:33,861 - #16 putn
INFO  21:29:33,861 - #40 (
INFO  21:29:33,861 - #16 int
INFO  21:29:33,861 - #16 a
INFO  21:29:33,861 - #38 ,
INFO  21:29:33,861 - #16 int
INFO  21:29:33,861 - #16 idx
INFO  21:29:33,862 - #41 )
INFO  21:29:33,862 - #44 {
INFO  21:29:33,862 - #16 this
INFO  21:29:33,862 - #39 .
INFO  21:29:33,862 - #16 neg
INFO  21:29:33,862 - #42 [
INFO  21:29:33,862 - #16 idx
INFO  21:29:33,862 - #43 ]
INFO  21:29:33,862 - #33 =
INFO  21:29:33,862 - #16 a
INFO  21:29:33,862 - #36 ;
INFO  21:29:33,862 - #45 }
INFO  21:29:33,862 - #16 int
INFO  21:29:33,862 - #16 getp
INFO  21:29:33,862 - #40 (
INFO  21:29:33,862 - #16 int
INFO  21:29:33,862 - #16 idx
INFO  21:29:33,862 - #41 )
INFO  21:29:33,862 - #44 {
INFO  21:29:33,862 - #11 return
INFO  21:29:33,862 - #16 pos
INFO  21:29:33,862 - #42 [
INFO  21:29:33,862 - #16 idx
INFO  21:29:33,862 - #43 ]
INFO  21:29:33,862 - #36 ;
INFO  21:29:33,862 - #45 }
INFO  21:29:33,862 - #16 int
INFO  21:29:33,862 - #16 getn
INFO  21:29:33,862 - #40 (
INFO  21:29:33,862 - #16 int
INFO  21:29:33,863 - #16 idx
INFO  21:29:33,863 - #41 )
INFO  21:29:33,863 - #44 {
INFO  21:29:33,863 - #11 return
INFO  21:29:33,863 - #16 neg
INFO  21:29:33,863 - #42 [
INFO  21:29:33,863 - #16 idx
INFO  21:29:33,863 - #43 ]
INFO  21:29:33,863 - #36 ;
INFO  21:29:33,863 - #45 }
INFO  21:29:33,863 - #45 }
INFO  21:29:33,863 - #45 }
INFO  21:29:33,863 - #16 Table
INFO  21:29:33,863 - #16 val
INFO  21:29:33,863 - #36 ;
INFO  21:29:33,863 - #16 Int
INFO  21:29:33,863 - #16 rows
INFO  21:29:33,863 - #38 ,
INFO  21:29:33,863 - #16 columns
INFO  21:29:33,863 - #36 ;
INFO  21:29:33,863 - #44 {
INFO  21:29:33,863 - #12 void
INFO  21:29:33,863 - #16 f
INFO  21:29:33,863 - #40 (
INFO  21:29:33,863 - #16 char
INFO  21:29:33,863 - #16 ch
INFO  21:29:33,863 - #38 ,
INFO  21:29:33,863 - #16 int
INFO  21:29:33,864 - #16 a
INFO  21:29:33,864 - #38 ,
INFO  21:29:33,864 - #16 int
INFO  21:29:33,864 - #16 arg
INFO  21:29:33,864 - #41 )
INFO  21:29:33,864 - #44 {
INFO  21:29:33,864 - #16 int
INFO  21:29:33,864 - #16 x
INFO  21:29:33,864 - #36 ;
INFO  21:29:33,864 - #16 x
INFO  21:29:33,864 - #33 =
INFO  21:29:33,864 - #16 arg
INFO  21:29:33,864 - #36 ;
INFO  21:29:33,865 - #45 }
INFO  21:29:33,865 - #12 void
INFO  21:29:33,865 - #16 main
INFO  21:29:33,865 - #40 (
INFO  21:29:33,865 - #41 )
INFO  21:29:33,865 - #44 {
INFO  21:29:33,865 - #16 int
INFO  21:29:33,865 - #16 x
INFO  21:29:33,865 - #38 ,
INFO  21:29:33,865 - #16 i
INFO  21:29:33,865 - #36 ;
INFO  21:29:33,865 - #16 char
INFO  21:29:33,865 - #16 c
INFO  21:29:33,865 - #36 ;
INFO  21:29:33,865 - #16 int
INFO  21:29:33,865 - #16 arr
INFO  21:29:33,865 - #42 [
INFO  21:29:33,866 - #43 ]
INFO  21:29:33,866 - #36 ;
INFO  21:29:33,866 - #16 val
INFO  21:29:33,866 - #33 =
INFO  21:29:33,866 - #8 new
INFO  21:29:33,866 - #16 Table
INFO  21:29:33,866 - #40 (
INFO  21:29:33,866 - #17 2
INFO  21:29:33,866 - #41 )
INFO  21:29:33,866 - #36 ;
INFO  21:29:33,866 - #16 arr
INFO  21:29:33,866 - #33 =
INFO  21:29:33,866 - #8 new
INFO  21:29:33,866 - #16 int
INFO  21:29:33,866 - #42 [
INFO  21:29:33,866 - #17 3
INFO  21:29:33,866 - #43 ]
INFO  21:29:33,866 - #36 ;
INFO  21:29:33,866 - #16 i
INFO  21:29:33,866 - #33 =
INFO  21:29:33,866 - #17 0
INFO  21:29:33,866 - #36 ;
INFO  21:29:33,866 - #7 while
INFO  21:29:33,866 - #40 (
INFO  21:29:33,866 - #16 i
INFO  21:29:33,866 - #29 <
INFO  21:29:33,866 - #17 3
INFO  21:29:33,866 - #41 )
INFO  21:29:33,866 - #44 {
INFO  21:29:33,866 - #16 arr
INFO  21:29:33,866 - #42 [
INFO  21:29:33,867 - #16 i
INFO  21:29:33,867 - #43 ]
INFO  21:29:33,867 - #33 =
INFO  21:29:33,867 - #16 i
INFO  21:29:33,867 - #36 ;
INFO  21:29:33,867 - #16 i
INFO  21:29:33,867 - #34 ++
INFO  21:29:33,867 - #36 ;
INFO  21:29:33,867 - #45 }
INFO  21:29:33,867 - #16 arr
INFO  21:29:33,867 - #39 .
INFO  21:29:33,867 - #15 foreach
INFO  21:29:33,867 - #40 (
INFO  21:29:33,867 - #16 x
INFO  21:29:33,867 - #46 =>
INFO  21:29:33,867 - #9 print
INFO  21:29:33,867 - #40 (
INFO  21:29:33,867 - #16 x
INFO  21:29:33,867 - #41 )
INFO  21:29:33,867 - #36 ;
INFO  21:29:33,867 - #41 )
INFO  21:29:33,867 - #36 ;
INFO  21:29:33,867 - #16 val
INFO  21:29:33,867 - #39 .
INFO  21:29:33,867 - #16 pos
INFO  21:29:33,867 - #33 =
INFO  21:29:33,867 - #8 new
INFO  21:29:33,867 - #16 int
INFO  21:29:33,867 - #42 [
INFO  21:29:33,867 - #16 size
INFO  21:29:33,867 - #43 ]
INFO  21:29:33,867 - #36 ;
INFO  21:29:33,867 - #16 val
INFO  21:29:33,867 - #39 .
INFO  21:29:33,867 - #16 neg
INFO  21:29:33,867 - #33 =
INFO  21:29:33,867 - #8 new
INFO  21:29:33,867 - #16 int
INFO  21:29:33,868 - #42 [
INFO  21:29:33,868 - #16 size
INFO  21:29:33,868 - #43 ]
INFO  21:29:33,868 - #36 ;
INFO  21:29:33,868 - #10 read
INFO  21:29:33,868 - #40 (
INFO  21:29:33,868 - #16 x
INFO  21:29:33,868 - #41 )
INFO  21:29:33,868 - #36 ;
INFO  21:29:33,868 - #42 [
INFO  21:29:33,868 - #16 i
INFO  21:29:33,868 - #38 ,
INFO  21:29:33,868 - #38 ,
INFO  21:29:33,868 - #16 x
INFO  21:29:33,868 - #43 ]
INFO  21:29:33,868 - #33 =
INFO  21:29:33,868 - #16 arr
INFO  21:29:33,868 - #36 ;
INFO  21:29:33,868 - #7 while
INFO  21:29:33,868 - #40 (
INFO  21:29:33,868 - #16 i
INFO  21:29:33,868 - #29 <
INFO  21:29:33,868 - #16 size
INFO  21:29:33,868 - #41 )
INFO  21:29:33,868 - #44 {
INFO  21:29:33,868 - #16 val
INFO  21:29:33,868 - #39 .
INFO  21:29:33,868 - #16 putp
INFO  21:29:33,868 - #40 (
INFO  21:29:33,868 - #17 0
INFO  21:29:33,868 - #38 ,
INFO  21:29:33,868 - #16 i
INFO  21:29:33,868 - #41 )
INFO  21:29:33,868 - #36 ;
INFO  21:29:33,868 - #16 val
INFO  21:29:33,869 - #39 .
INFO  21:29:33,869 - #16 putn
INFO  21:29:33,869 - #40 (
INFO  21:29:33,869 - #17 0
INFO  21:29:33,869 - #38 ,
INFO  21:29:33,869 - #16 i
INFO  21:29:33,869 - #41 )
INFO  21:29:33,869 - #36 ;
INFO  21:29:33,869 - #16 i
INFO  21:29:33,869 - #34 ++
INFO  21:29:33,869 - #36 ;
INFO  21:29:33,869 - #45 }
INFO  21:29:33,869 - #16 f
INFO  21:29:33,869 - #40 (
INFO  21:29:33,869 - #16 c
INFO  21:29:33,869 - #38 ,
INFO  21:29:33,869 - #16 x
INFO  21:29:33,869 - #38 ,
INFO  21:29:33,869 - #16 i
INFO  21:29:33,869 - #41 )
INFO  21:29:33,869 - #36 ;
INFO  21:29:33,869 - #10 read
INFO  21:29:33,869 - #40 (
INFO  21:29:33,869 - #16 rows
INFO  21:29:33,869 - #41 )
INFO  21:29:33,869 - #36 ;
INFO  21:29:33,869 - #16 x
INFO  21:29:33,869 - #33 =
INFO  21:29:33,869 - #16 rows
INFO  21:29:33,869 - #36 ;
INFO  21:29:33,869 - #7 while
INFO  21:29:33,869 - #40 (
INFO  21:29:33,869 - #19 true
INFO  21:29:33,869 - #41 )
INFO  21:29:33,869 - #44 {
INFO  21:29:33,869 - #6 if
INFO  21:29:33,869 - #40 (
INFO  21:29:33,869 - #16 x
INFO  21:29:33,870 - #30 <=
INFO  21:29:33,870 - #17 0
INFO  21:29:33,870 - #41 )
INFO  21:29:33,870 - #2 break
INFO  21:29:33,870 - #36 ;
INFO  21:29:33,870 - #6 if
INFO  21:29:33,870 - #40 (
INFO  21:29:33,870 - #17 0
INFO  21:29:33,870 - #30 <=
INFO  21:29:33,870 - #16 x
INFO  21:29:33,870 - #31 &&
INFO  21:29:33,870 - #16 x
INFO  21:29:33,870 - #29 <
INFO  21:29:33,870 - #16 size
INFO  21:29:33,870 - #41 )
INFO  21:29:33,870 - #44 {
INFO  21:29:33,870 - #16 val
INFO  21:29:33,870 - #39 .
INFO  21:29:33,870 - #16 putp
INFO  21:29:33,870 - #40 (
INFO  21:29:33,870 - #16 val
INFO  21:29:33,870 - #39 .
INFO  21:29:33,870 - #16 getp
INFO  21:29:33,870 - #40 (
INFO  21:29:33,870 - #16 x
INFO  21:29:33,870 - #41 )
INFO  21:29:33,870 - #20 +
INFO  21:29:33,870 - #17 1
INFO  21:29:33,870 - #41 )
INFO  21:29:33,870 - #36 ;
INFO  21:29:33,870 - #45 }
INFO  21:29:33,870 - #4 else
INFO  21:29:33,870 - #6 if
INFO  21:29:33,870 - #40 (
INFO  21:29:33,870 - #16 size
INFO  21:29:33,870 - #29 <
INFO  21:29:33,870 - #16 x
INFO  21:29:33,870 - #31 &&
INFO  21:29:33,870 - #16 x
INFO  21:29:33,870 - #29 <
INFO  21:29:33,870 - #17 0
INFO  21:29:33,871 - #41 )
INFO  21:29:33,871 - #44 {
INFO  21:29:33,871 - #16 val
INFO  21:29:33,871 - #39 .
INFO  21:29:33,871 - #16 putn
INFO  21:29:33,871 - #40 (
INFO  21:29:33,871 - #16 val
INFO  21:29:33,871 - #39 .
INFO  21:29:33,871 - #16 getn
INFO  21:29:33,871 - #40 (
INFO  21:29:33,871 - #16 x
INFO  21:29:33,871 - #41 )
INFO  21:29:33,871 - #20 +
INFO  21:29:33,871 - #17 1
INFO  21:29:33,871 - #41 )
INFO  21:29:33,871 - #36 ;
INFO  21:29:33,871 - #45 }
INFO  21:29:33,871 - #10 read
INFO  21:29:33,871 - #40 (
INFO  21:29:33,871 - #16 x
INFO  21:29:33,871 - #41 )
INFO  21:29:33,871 - #36 ;
INFO  21:29:33,871 - #45 }
INFO  21:29:33,871 - #45 }
INFO  21:29:33,871 - #45 }
