INFO  21:28:50,096 - Compiling source file: C:\Users\xparh\OneDrive - student.etf.bg.ac.rs\Materijali 7. Semestar\PP1\Projekat\Babylon\Babylon\test\program.mj
INFO  21:28:50,103 - #1 program
INFO  21:28:50,103 - #16 p
INFO  21:28:50,103 - #5 const
INFO  21:28:50,103 - #16 int
INFO  21:28:50,103 - #16 size
INFO  21:28:50,103 - #33 =
INFO  21:28:50,103 - #17 10
INFO  21:28:50,103 - #36 ;
INFO  21:28:50,103 - #3 class
INFO  21:28:50,103 - #16 Table
INFO  21:28:50,103 - #44 {
INFO  21:28:50,104 - #16 int
INFO  21:28:50,104 - #16 pos
INFO  21:28:50,104 - #42 [
INFO  21:28:50,104 - #43 ]
INFO  21:28:50,104 - #38 ,
INFO  21:28:50,104 - #16 neg
INFO  21:28:50,104 - #42 [
INFO  21:28:50,104 - #43 ]
INFO  21:28:50,104 - #38 ,
INFO  21:28:50,104 - #16 factor
INFO  21:28:50,104 - #36 ;
INFO  21:28:50,104 - #44 {
INFO  21:28:50,104 - #16 Table
INFO  21:28:50,104 - #40 (
INFO  21:28:50,104 - #16 int
INFO  21:28:50,104 - #16 factor
INFO  21:28:50,104 - #41 )
INFO  21:28:50,104 - #44 {
INFO  21:28:50,104 - #16 this
INFO  21:28:50,104 - #39 .
INFO  21:28:50,105 - #16 factor
INFO  21:28:50,105 - #33 =
INFO  21:28:50,105 - #16 factor
INFO  21:28:50,105 - #36 ;
INFO  21:28:50,105 - #45 }
INFO  21:28:50,105 - #12 void
INFO  21:28:50,105 - #16 putp
INFO  21:28:50,105 - #40 (
INFO  21:28:50,105 - #16 int
INFO  21:28:50,105 - #16 a
INFO  21:28:50,105 - #38 ,
INFO  21:28:50,105 - #16 int
INFO  21:28:50,105 - #16 idx
INFO  21:28:50,105 - #41 )
INFO  21:28:50,105 - #44 {
INFO  21:28:50,105 - #16 this
INFO  21:28:50,105 - #39 .
INFO  21:28:50,105 - #16 pos
INFO  21:28:50,105 - #42 [
INFO  21:28:50,108 - #16 idx
INFO  21:28:50,108 - #43 ]
INFO  21:28:50,108 - #33 =
INFO  21:28:50,108 - #16 a
INFO  21:28:50,108 - #36 ;
INFO  21:28:50,108 - #45 }
INFO  21:28:50,108 - #12 void
INFO  21:28:50,108 - #16 putn
INFO  21:28:50,108 - #40 (
INFO  21:28:50,108 - #16 int
INFO  21:28:50,108 - #16 a
INFO  21:28:50,108 - #38 ,
INFO  21:28:50,108 - #16 int
INFO  21:28:50,108 - #16 idx
INFO  21:28:50,108 - #41 )
INFO  21:28:50,108 - #44 {
INFO  21:28:50,108 - #16 this
INFO  21:28:50,108 - #39 .
INFO  21:28:50,109 - #16 neg
INFO  21:28:50,109 - #42 [
INFO  21:28:50,109 - #16 idx
INFO  21:28:50,109 - #43 ]
INFO  21:28:50,109 - #33 =
INFO  21:28:50,109 - #16 a
INFO  21:28:50,109 - #36 ;
INFO  21:28:50,109 - #45 }
INFO  21:28:50,109 - #16 int
INFO  21:28:50,109 - #16 getp
INFO  21:28:50,109 - #40 (
INFO  21:28:50,109 - #16 int
INFO  21:28:50,109 - #16 idx
INFO  21:28:50,109 - #41 )
INFO  21:28:50,109 - #44 {
INFO  21:28:50,109 - #11 return
INFO  21:28:50,109 - #16 pos
INFO  21:28:50,109 - #42 [
INFO  21:28:50,109 - #16 idx
INFO  21:28:50,109 - #43 ]
INFO  21:28:50,109 - #36 ;
INFO  21:28:50,109 - #45 }
INFO  21:28:50,109 - #16 int
INFO  21:28:50,109 - #16 getn
INFO  21:28:50,110 - #40 (
INFO  21:28:50,110 - #16 int
INFO  21:28:50,110 - #16 idx
INFO  21:28:50,110 - #41 )
INFO  21:28:50,110 - #44 {
INFO  21:28:50,110 - #11 return
INFO  21:28:50,110 - #16 neg
INFO  21:28:50,110 - #42 [
INFO  21:28:50,110 - #16 idx
INFO  21:28:50,110 - #43 ]
INFO  21:28:50,110 - #36 ;
INFO  21:28:50,110 - #45 }
INFO  21:28:50,111 - #45 }
INFO  21:28:50,111 - #45 }
INFO  21:28:50,111 - #16 Table
INFO  21:28:50,111 - #16 val
INFO  21:28:50,111 - #36 ;
INFO  21:28:50,111 - #16 Int
INFO  21:28:50,111 - #16 rows
INFO  21:28:50,111 - #38 ,
INFO  21:28:50,111 - #16 columns
INFO  21:28:50,111 - #36 ;
INFO  21:28:50,111 - #44 {
INFO  21:28:50,111 - #12 void
INFO  21:28:50,111 - #16 f
INFO  21:28:50,111 - #40 (
INFO  21:28:50,111 - #16 char
INFO  21:28:50,111 - #16 ch
INFO  21:28:50,111 - #38 ,
INFO  21:28:50,111 - #16 int
INFO  21:28:50,111 - #16 a
INFO  21:28:50,111 - #38 ,
INFO  21:28:50,111 - #16 int
INFO  21:28:50,111 - #16 arg
INFO  21:28:50,111 - #41 )
INFO  21:28:50,111 - #44 {
INFO  21:28:50,112 - #16 int
INFO  21:28:50,112 - #16 x
INFO  21:28:50,112 - #36 ;
INFO  21:28:50,112 - #16 x
INFO  21:28:50,112 - #33 =
INFO  21:28:50,112 - #16 arg
INFO  21:28:50,112 - #36 ;
INFO  21:28:50,112 - #45 }
INFO  21:28:50,112 - #12 void
INFO  21:28:50,112 - #16 main
INFO  21:28:50,112 - #40 (
INFO  21:28:50,112 - #41 )
INFO  21:28:50,112 - #44 {
INFO  21:28:50,112 - #16 int
INFO  21:28:50,112 - #16 x
INFO  21:28:50,112 - #38 ,
INFO  21:28:50,112 - #16 i
INFO  21:28:50,112 - #36 ;
INFO  21:28:50,112 - #16 char
INFO  21:28:50,112 - #16 c
INFO  21:28:50,112 - #36 ;
INFO  21:28:50,112 - #16 int
INFO  21:28:50,112 - #16 arr
INFO  21:28:50,112 - #42 [
INFO  21:28:50,112 - #43 ]
INFO  21:28:50,112 - #36 ;
INFO  21:28:50,112 - #16 val
INFO  21:28:50,112 - #33 =
INFO  21:28:50,112 - #8 new
INFO  21:28:50,112 - #16 Table
INFO  21:28:50,112 - #40 (
INFO  21:28:50,113 - #17 2
INFO  21:28:50,113 - #41 )
INFO  21:28:50,113 - #36 ;
INFO  21:28:50,113 - #16 arr
INFO  21:28:50,113 - #33 =
INFO  21:28:50,113 - #8 new
INFO  21:28:50,113 - #16 int
INFO  21:28:50,113 - #42 [
INFO  21:28:50,113 - #17 3
INFO  21:28:50,113 - #43 ]
INFO  21:28:50,113 - #36 ;
INFO  21:28:50,113 - #16 i
INFO  21:28:50,113 - #33 =
INFO  21:28:50,113 - #17 0
INFO  21:28:50,113 - #36 ;
INFO  21:28:50,113 - #7 while
INFO  21:28:50,113 - #40 (
INFO  21:28:50,113 - #16 i
INFO  21:28:50,113 - #29 <
INFO  21:28:50,113 - #17 3
INFO  21:28:50,113 - #41 )
INFO  21:28:50,113 - #44 {
INFO  21:28:50,113 - #16 arr
INFO  21:28:50,113 - #42 [
INFO  21:28:50,113 - #16 i
INFO  21:28:50,113 - #43 ]
INFO  21:28:50,113 - #33 =
INFO  21:28:50,113 - #16 i
INFO  21:28:50,113 - #36 ;
INFO  21:28:50,114 - #16 i
INFO  21:28:50,114 - #34 ++
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #45 }
INFO  21:28:50,114 - #16 arr
INFO  21:28:50,114 - #39 .
INFO  21:28:50,114 - #15 foreach
INFO  21:28:50,114 - #40 (
INFO  21:28:50,114 - #16 x
INFO  21:28:50,114 - #46 =>
INFO  21:28:50,114 - #9 print
INFO  21:28:50,114 - #40 (
INFO  21:28:50,114 - #16 x
INFO  21:28:50,114 - #41 )
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #41 )
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #16 val
INFO  21:28:50,114 - #39 .
INFO  21:28:50,114 - #16 pos
INFO  21:28:50,114 - #33 =
INFO  21:28:50,114 - #8 new
INFO  21:28:50,114 - #16 int
INFO  21:28:50,114 - #42 [
INFO  21:28:50,114 - #16 size
INFO  21:28:50,114 - #43 ]
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #16 val
INFO  21:28:50,114 - #39 .
INFO  21:28:50,114 - #16 neg
INFO  21:28:50,114 - #33 =
INFO  21:28:50,114 - #8 new
INFO  21:28:50,114 - #16 int
INFO  21:28:50,114 - #42 [
INFO  21:28:50,114 - #16 size
INFO  21:28:50,114 - #43 ]
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #10 read
INFO  21:28:50,114 - #40 (
INFO  21:28:50,114 - #16 x
INFO  21:28:50,114 - #41 )
INFO  21:28:50,114 - #36 ;
INFO  21:28:50,114 - #42 [
INFO  21:28:50,114 - #16 i
INFO  21:28:50,114 - #38 ,
INFO  21:28:50,114 - #38 ,
INFO  21:28:50,115 - #16 x
INFO  21:28:50,115 - #43 ]
INFO  21:28:50,115 - #33 =
INFO  21:28:50,115 - #16 arr
INFO  21:28:50,115 - #36 ;
INFO  21:28:50,115 - #7 while
INFO  21:28:50,115 - #40 (
INFO  21:28:50,115 - #16 i
INFO  21:28:50,115 - #29 <
INFO  21:28:50,115 - #16 size
INFO  21:28:50,115 - #41 )
INFO  21:28:50,115 - #44 {
INFO  21:28:50,115 - #16 val
INFO  21:28:50,115 - #39 .
INFO  21:28:50,115 - #16 putp
INFO  21:28:50,115 - #40 (
INFO  21:28:50,115 - #17 0
INFO  21:28:50,115 - #38 ,
INFO  21:28:50,115 - #16 i
INFO  21:28:50,115 - #41 )
INFO  21:28:50,115 - #36 ;
INFO  21:28:50,115 - #16 val
INFO  21:28:50,115 - #39 .
INFO  21:28:50,115 - #16 putn
INFO  21:28:50,115 - #40 (
INFO  21:28:50,115 - #17 0
INFO  21:28:50,115 - #38 ,
INFO  21:28:50,115 - #16 i
INFO  21:28:50,115 - #41 )
INFO  21:28:50,115 - #36 ;
INFO  21:28:50,115 - #16 i
INFO  21:28:50,116 - #34 ++
INFO  21:28:50,116 - #36 ;
INFO  21:28:50,116 - #45 }
INFO  21:28:50,116 - #16 f
INFO  21:28:50,116 - #40 (
INFO  21:28:50,116 - #16 c
INFO  21:28:50,116 - #38 ,
INFO  21:28:50,116 - #16 x
INFO  21:28:50,116 - #38 ,
INFO  21:28:50,116 - #16 i
INFO  21:28:50,116 - #41 )
INFO  21:28:50,116 - #36 ;
INFO  21:28:50,116 - #10 read
INFO  21:28:50,116 - #40 (
INFO  21:28:50,116 - #16 rows
INFO  21:28:50,116 - #41 )
INFO  21:28:50,116 - #36 ;
INFO  21:28:50,116 - #16 x
INFO  21:28:50,116 - #33 =
INFO  21:28:50,116 - #16 rows
INFO  21:28:50,116 - #36 ;
INFO  21:28:50,116 - #7 while
INFO  21:28:50,116 - #40 (
INFO  21:28:50,116 - #19 true
INFO  21:28:50,116 - #41 )
INFO  21:28:50,116 - #44 {
INFO  21:28:50,116 - #6 if
INFO  21:28:50,116 - #40 (
INFO  21:28:50,116 - #16 x
INFO  21:28:50,116 - #30 <=
INFO  21:28:50,116 - #17 0
INFO  21:28:50,117 - #41 )
INFO  21:28:50,117 - #2 break
INFO  21:28:50,117 - #36 ;
INFO  21:28:50,117 - #6 if
INFO  21:28:50,117 - #40 (
INFO  21:28:50,117 - #17 0
INFO  21:28:50,117 - #30 <=
INFO  21:28:50,117 - #16 x
INFO  21:28:50,117 - #31 &&
INFO  21:28:50,117 - #16 x
INFO  21:28:50,117 - #29 <
INFO  21:28:50,117 - #16 size
INFO  21:28:50,117 - #41 )
INFO  21:28:50,117 - #44 {
INFO  21:28:50,117 - #16 val
INFO  21:28:50,117 - #39 .
INFO  21:28:50,117 - #16 putp
INFO  21:28:50,117 - #40 (
INFO  21:28:50,117 - #16 val
INFO  21:28:50,117 - #39 .
INFO  21:28:50,117 - #16 getp
INFO  21:28:50,117 - #40 (
INFO  21:28:50,117 - #16 x
INFO  21:28:50,117 - #41 )
INFO  21:28:50,117 - #20 +
INFO  21:28:50,117 - #17 1
INFO  21:28:50,117 - #41 )
INFO  21:28:50,117 - #36 ;
INFO  21:28:50,117 - #45 }
INFO  21:28:50,117 - #4 else
INFO  21:28:50,117 - #6 if
INFO  21:28:50,117 - #40 (
INFO  21:28:50,117 - #16 size
INFO  21:28:50,117 - #29 <
INFO  21:28:50,117 - #16 x
INFO  21:28:50,117 - #31 &&
INFO  21:28:50,117 - #16 x
INFO  21:28:50,118 - #29 <
INFO  21:28:50,118 - #17 0
INFO  21:28:50,118 - #41 )
INFO  21:28:50,118 - #44 {
INFO  21:28:50,118 - #16 val
INFO  21:28:50,118 - #39 .
INFO  21:28:50,118 - #16 putn
INFO  21:28:50,118 - #40 (
INFO  21:28:50,118 - #16 val
INFO  21:28:50,118 - #39 .
INFO  21:28:50,118 - #16 getn
INFO  21:28:50,118 - #40 (
INFO  21:28:50,118 - #16 x
INFO  21:28:50,118 - #41 )
INFO  21:28:50,118 - #20 +
INFO  21:28:50,118 - #17 1
INFO  21:28:50,118 - #41 )
INFO  21:28:50,118 - #36 ;
INFO  21:28:50,118 - #45 }
INFO  21:28:50,118 - #10 read
INFO  21:28:50,118 - #40 (
INFO  21:28:50,118 - #16 x
INFO  21:28:50,118 - #41 )
INFO  21:28:50,118 - #36 ;
INFO  21:28:50,118 - #45 }
INFO  21:28:50,118 - #45 }
INFO  21:28:50,118 - #45 }
